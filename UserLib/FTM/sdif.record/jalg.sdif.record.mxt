max v2;
#N vpatcher 1532 341 2521 744;
#P origin -28 15;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 96 274 28 9109513 del 1;
#P comment 740 217 191 9109513 4. a recording just ended;
#P message 20 193 14 9109513 1;
#P newex 20 212 52 9109513 s $0_order;
#P newex 75 200 47 9109513 jcom.thru;
#P newex 75 175 559 9109513 switch 8 1;
#P comment 357 25 218 9109513 Data and nvts to be recorded in the sdif file;
#P comment 740 123 169 9109513 These are the /order cues:;
#P window linecount 2;
#P comment 740 137 191 9109513 1. the streamcount parameter is adjusted \, and thereby the patcher is reset;
#P window linecount 1;
#P comment 740 202 191 9109513 3. a /file message is sent to the module;
#P inlet 338 23 15 0;
#P objectname inlet[1];
#P window linecount 3;
#P comment 740 164 191 9109513 2: ftm.sdif.write is generated within the dynamic patcher -OR- the module just stopped a recroding;
#P comment 740 81 169 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P button 20 175 15 0;
#P window linecount 1;
#P message 96 295 14 9109513 2;
#P newex 96 316 102 9109513 s $0_order;
#P newex 96 251 45 9109513 sel clean;
#P newex 96 228 96 9109513 jcom.oscroute /script;
#P newex 75 352 108 9109513 dynamic_patcher.mxt;
#N vpatcher 196 146 1094 720;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 372 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 313 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 497 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 434 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 249 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 186 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 124 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 62 112 52 9109513 p store_ID;
#P newex 54 87 510 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5 /6 /7;
#P newex 54 56 173 9109513 jcom.oscroute /stream_IDs;
#P window linecount 0;
#P newex 54 140 449 9109513 buddy 8;
#P outlet 54 424 15 0;
#P inlet 54 35 15 0;
#P window linecount 1;
#P newex 54 172 40 9109513 t b l b;
#P newex 456 390 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 84 196 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 54 272 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 69 224 240 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5 %6 %7;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 461 415 59 415;
#P fasten 8 1 6 0 222 77 642 77 642 415 59 415;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 7 6 0 6;
#P lcolor 1;
#P connect 7 7 0 7;
#P lcolor 1;
#P connect 9 4 7 4;
#P connect 16 0 7 4;
#P connect 9 4 16 0;
#P connect 9 5 7 5;
#P connect 17 0 7 5;
#P connect 9 5 17 0;
#P connect 9 6 7 6;
#P connect 14 0 7 6;
#P connect 9 6 14 0;
#P fasten 0 0 3 0 74 267 461 267;
#P fasten 1 0 3 0 59 375 461 375;
#P fasten 2 0 3 0 89 217 461 217;
#P connect 9 7 7 7;
#P connect 15 0 7 7;
#P connect 9 7 15 0;
#P pop;
#P newobj 629 144 70 9109513 p eightstreams;
#N vpatcher 39 178 638 638;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 462 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 396 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 331 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 259 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 194 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 129 97 52 9109513 p store_ID;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 97 52 9109513 p store_ID;
#P window linecount 1;
#P newex 54 67 474 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5 /6;
#P newex 54 42 492 9109513 jcom.oscroute /stream_IDs;
#P newex 54 135 408 9109513 buddy 7;
#P outlet 54 419 15 0;
#P inlet 54 21 15 0;
#P newex 54 167 40 9109513 t b l b;
#P newex 456 385 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 84 191 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 54 267 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 69 219 239 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5 %6;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 461 410 59 410;
#P fasten 8 1 6 0 541 109 541 109 541 410 59 410;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 7 6 0 6;
#P lcolor 1;
#P connect 9 4 7 4;
#P connect 14 0 7 4;
#P connect 9 4 14 0;
#P connect 9 5 7 5;
#P connect 15 0 7 5;
#P connect 9 5 15 0;
#P connect 9 6 7 6;
#P connect 16 0 7 6;
#P fasten 0 0 3 0 74 262 461 262;
#P fasten 2 0 3 0 89 212 461 212;
#P fasten 1 0 3 0 59 370 461 370;
#P connect 9 6 16 0;
#P pop;
#P newobj 551 144 76 9109513 p sevenstreams;
#N vpatcher 640 300 1240 699;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 472 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 393 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 309 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 228 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 150 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 71 79 52 9109513 p store_ID;
#P newex 55 54 502 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5;
#P newex 55 27 141 9109513 jcom.oscroute /stream_IDs;
#P window linecount 0;
#P newex 55 104 420 9109513 buddy 6;
#P outlet 55 381 15 0;
#P inlet 55 6 15 0;
#P window linecount 1;
#P newex 55 129 40 9109513 t b l b;
#P newex 457 347 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 153 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 55 229 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 70 181 239 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 462 372 60 372;
#P fasten 8 1 6 0 191 49 574 49 574 372 60 372;
#P connect 4 1 0 0;
#P connect 9 0 10 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 11 0 7 1;
#P connect 9 1 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 12 0 7 2;
#P connect 9 2 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 13 0 7 3;
#P connect 9 3 7 3;
#P connect 9 3 13 0;
#P connect 14 0 7 4;
#P connect 9 4 7 4;
#P connect 9 4 14 0;
#P fasten 0 0 3 0 75 224 462 224;
#P fasten 1 0 3 0 60 332 462 332;
#P fasten 2 0 3 0 90 174 462 174;
#P connect 15 0 7 5;
#P connect 9 5 7 5;
#P connect 9 5 15 0;
#P pop;
#P newobj 483 144 62 9109513 p sixstreams;
#N vpatcher 640 281 1240 716;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 371 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 287 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 203 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 119 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 32 93 52 9109513 p store_ID;
#P newex 22 67 442 9109513 jcom.oscroute /0 /1 /2 /3 /4;
#P window linecount 0;
#P newex 22 40 492 9109513 jcom.oscroute /stream_IDs;
#P newex 22 119 357 9109513 buddy 5;
#P outlet 22 403 15 0;
#P inlet 22 19 15 0;
#P window linecount 1;
#P newex 22 151 40 9109513 t b l b;
#P newex 424 369 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 52 175 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 22 251 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 37 203 222 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 429 394 27 394;
#P fasten 8 1 6 0 509 93 509 93 509 394 27 394;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 9 4 7 4;
#P connect 14 0 7 4;
#P connect 9 4 14 0;
#P fasten 0 0 3 0 42 246 429 246;
#P fasten 2 0 3 0 57 196 429 196;
#P fasten 1 0 3 0 27 354 429 354;
#P pop;
#P newobj 415 144 67 9109513 p fivestreams;
#P window linecount 2;
#P comment 188 354 320 9109513 The ftm.sdif.write needs different arguments according to the amount of streams and the stream IDs.;
#P window linecount 1;
#N vpatcher 640 299 1256 780;
#P origin 0 -3;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 289 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 214 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 139 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 72 52 9109513 p store_ID;
#P newex 53 47 310 9109513 jcom.oscroute /0 /1 /2 /3;
#P window linecount 0;
#P newex 53 21 492 9109513 jcom.oscroute /stream_IDs;
#P newex 53 95 236 9109513 buddy 4;
#P outlet 53 379 15 0;
#P inlet 53 0 15 0;
#P window linecount 1;
#P newex 53 127 40 9109513 t b l b;
#P newex 455 345 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 83 151 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 53 227 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 68 179 219 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 460 370 58 370;
#P fasten 8 1 6 0 540 69 540 69 540 370 58 370;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 11 0;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 9 2 12 0;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 13 0 7 3;
#P connect 9 3 7 3;
#P connect 9 3 13 0;
#P fasten 1 0 3 0 58 330 460 330;
#P fasten 2 0 3 0 88 172 460 172;
#P fasten 0 0 3 0 73 222 460 222;
#P pop;
#P newobj 347 144 67 9109513 p fourstreams;
#N vpatcher 1229 292 2001 619;
#P origin 17 -188;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 2168 50 2778 545;
#P origin 0 -41;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#P message 216 138 24 9109513 set;
#P window linecount 2;
#P comment 81 414 360 9109513 the order 4 closes the above gate and thus prevents the same file name from being sent to ftm.sdif.record;
#P window linecount 1;
#P message 244 138 14 9109513 0;
#P message 258 138 14 9109513 1;
#P newex 293 179 42 9109513 gate 1 1;
#P window linecount 0;
#P newex 244 88 95 9109513 r $0_order;
#P message 63 272 24 9109513 4 \, 2;
#P window linecount 2;
#P comment 81 386 360 9109513 If ftm.sdif.write has not yet been generated in the dynamic patcher \, the open message is stored. It is executed when a /order 2 message is received;
#P window linecount 1;
#P message 304 138 14 9109513 1;
#P message 290 138 14 9109513 2;
#P newex 76 171 42 9109513 gate 2 2;
#P newex 325 138 33 9109513 del 10;
#P newex 244 109 101 9109513 sel 4 1 2;
#P window linecount 0;
#P message 108 225 380 9109513;
#P window linecount 1;
#P newex 108 196 57 9109513 prepend set;
#P newex 88 293 52 9109513 s $0_order;
#P message 88 272 14 9109513 3;
#P button 88 255 15 0;
#P newex 108 127 64 9109513 prepend open;
#P message 49 198 26 9109513 stop;
#P message 21 198 27 9109513 start;
#P newex 21 166 40 9109513 sel 1 0;
#P newex 21 331 99 9109513 prepend /write_control;
#P newex 21 54 340 9109513 jcom.oscroute /record_button /file;
#P outlet 21 369 15 0;
#P inlet 21 36 15 0;
#P comment 79 372 100 9109513 Order system:;
#P connect 1 0 3 0;
#P connect 3 0 5 0;
#P connect 5 0 6 0;
#P fasten 16 0 4 0 81 230 26 230;
#P fasten 13 0 4 0 113 254 169 254 169 327 26 327;
#P fasten 7 0 4 0 54 226 26 226;
#P connect 6 0 4 0;
#P connect 4 0 2 0;
#P fasten 3 2 2 0 356 81 515 81 515 361 26 361;
#P fasten 5 1 7 0 41 192 54 192;
#P connect 5 1 20 0;
#P fasten 18 0 16 0 309 163 81 163;
#P lcolor 1;
#P fasten 17 0 16 0 295 163 81 163;
#P lcolor 1;
#P connect 16 0 9 0;
#P fasten 13 0 9 0 113 245 93 245;
#P connect 9 0 10 0;
#P connect 20 0 11 0;
#P connect 10 0 11 0;
#P fasten 3 1 8 0 191 121 113 121;
#P connect 8 0 16 1;
#P connect 16 0 12 0;
#P connect 16 1 12 0;
#P fasten 22 0 13 0 298 218 113 218;
#P connect 12 0 13 0;
#P connect 26 0 13 0;
#P connect 14 0 26 0;
#P connect 21 0 14 0;
#P connect 14 0 24 0;
#P connect 14 1 23 0;
#P connect 14 1 17 0;
#P connect 23 0 22 0;
#P connect 24 0 22 0;
#P connect 14 2 18 0;
#P connect 14 2 15 0;
#P connect 15 0 22 1;
#P pop;
#P newobj 561 82 119 9109513 p write_control_commands;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 70 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 0 15 0;
#P connect 17 1 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 492 215 67 9109513 p streamdef 7;
#N vpatcher 461 42 1189 688;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P comment 33 548 394 9109513 - If [4] \, any stream definition message is put on hold \, and banged out after [4] and [3];
#P comment 23 532 446 9109513 later \, after a recording just ended [4];
#P comment 33 562 446 9109513 - If [4] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 252 470 300 9109513 4. a recording just ended;
#P newex 508 107 100 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 113 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 423 215 67 9109513 p streamdef 6;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 82 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 354 215 67 9109513 p streamdef 5;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 76 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 285 215 67 9109513 p streamdef 4;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 106 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 216 215 67 9109513 p streamdef 3;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 108 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 147 215 67 9109513 p streamdef 2;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 100 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 78 215 67 9109513 p streamdef 1;
#N vpatcher 461 42 1189 633;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 508 107 100 9109513 r $0_order;
#P comment 33 518 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 33 502 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 25 488 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 252 455 300 9109513 3. a /file message is sent to the module;
#P comment 252 441 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 78 220 44 9109513 pack s 0;
#P newex 78 246 31 9109513 zl rev;
#P comment 252 427 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 248 400 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 542 175 44 9109513 onebang;
#P message 508 247 14 9109513 2;
#P newex 508 135 114 9109513 sel 1 3 2;
#P newex 542 217 33 9109513 del 50;
#P window linecount 0;
#P message 525 247 14 9109513 1;
#P window linecount 1;
#P newex 186 307 42 9109513 gate 2 2;
#P window linecount 0;
#P message 218 371 394 9109513;
#P window linecount 1;
#P newex 218 339 57 9109513 prepend set;
#P newex 112 194 75 9109513 route streamdef;
#P comment 83 97 117 9109513 argument: stream number;
#P newex 112 172 57 9109513 patcherargs;
#P newex 218 123 122 9109513 buddy 3;
#P newex 78 271 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 218 220 47 9109513 tosymbol;
#P newex 274 154 75 9109513 prepend symbol;
#P newex 218 57 178 9109513 jcom.oscroute /ID /variables /description;
#P newex 218 246 70 9109513 prepend define;
#P newex 274 85 47 9109513 tosymbol;
#P newex 218 194 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 218 271 117 9109513 prepend /write_control;
#P inlet 218 35 15 0;
#P outlet 148 408 15 0;
#P comment 341 106 169 9109513 waiting for the full stream definition before sending the define message;
#P fasten 7 0 26 0 223 110 83 110;
#P connect 26 0 25 0;
#P connect 25 0 10 0;
#P connect 12 0 14 0;
#P connect 14 0 26 1;
#P connect 17 0 1 0;
#P fasten 16 0 1 0 223 402 153 402;
#P fasten 10 0 1 0 83 397 153 397;
#P fasten 18 0 17 0 530 301 191 301;
#P lcolor 1;
#P fasten 21 0 17 0 513 301 191 301;
#P lcolor 1;
#P connect 2 0 7 0;
#P connect 7 0 11 0;
#P connect 11 0 4 0;
#P connect 4 0 9 0;
#P connect 9 0 6 0;
#P connect 6 0 3 0;
#P connect 3 0 17 1;
#P connect 17 1 15 0;
#P connect 17 0 15 0;
#P fasten 19 0 16 0 547 362 223 362;
#P connect 15 0 16 0;
#P connect 7 1 5 0;
#P connect 5 0 11 1;
#P connect 11 1 8 0;
#P connect 8 0 4 1;
#P connect 7 2 11 2;
#P connect 7 0 4 2;
#P connect 7 0 4 3;
#P connect 11 2 4 4;
#P connect 32 0 20 0;
#P connect 20 0 21 0;
#P connect 19 0 18 0;
#P connect 20 1 22 0;
#P connect 22 0 19 0;
#P connect 20 2 22 1;
#P pop;
#P newobj 9 215 67 9109513 p streamdef 0;
#P inlet 9 27 15 0;
#P outlet 9 274 15 0;
#P newex 9 49 567 9109513 jcom.oscroute /stream/0 /stream/1 /stream/2 /stream/3 /stream/4 /stream/5 /stream/6 /stream/7;
#P window linecount 3;
#P comment 29 256 181 9109513 A message generating stream definitions for the ftm.sdif.write object is generated inside the streamdef subpatchers;
#P connect 3 0 1 0;
#P connect 1 0 4 0;
#P fasten 10 0 2 0 428 247 14 247;
#P fasten 9 0 2 0 359 247 14 247;
#P fasten 8 0 2 0 290 247 14 247;
#P fasten 7 0 2 0 221 247 14 247;
#P fasten 6 0 2 0 152 247 14 247;
#P fasten 5 0 2 0 83 247 14 247;
#P fasten 4 0 2 0 14 247 14 247;
#P fasten 12 0 2 0 566 247 14 247;
#P fasten 11 0 2 0 497 247 14 247;
#P connect 1 1 5 0;
#P connect 1 2 6 0;
#P connect 1 3 7 0;
#P connect 1 4 8 0;
#P connect 1 5 9 0;
#P connect 1 6 10 0;
#P connect 1 7 11 0;
#P connect 1 8 12 0;
#P pop;
#P newobj 204 89 59 9109513 p definitions;
#N vpatcher 682 38 1282 438;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 218 83 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 140 83 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 62 83 52 9109513 p store_ID;
#P newex 55 107 167 9109513 buddy 3;
#P newex 55 33 310 9109513 jcom.oscroute /stream_IDs;
#P newex 55 58 244 9109513 jcom.oscroute /0 /1 /2;
#P outlet 55 339 15 0;
#P inlet 55 12 15 0;
#P window linecount 1;
#P newex 55 132 40 9109513 t b l b;
#P newex 459 305 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 156 154 9240586 script delete sdif_write;
#P window linecount 5;
#P message 55 219 405 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 70 184 386 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2;
#P connect 5 0 8 0;
#P connect 8 0 7 0;
#P connect 7 0 9 0;
#P connect 10 0 9 0;
#P connect 9 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 464 330 60 330;
#P fasten 8 1 6 0 360 93 542 93 542 330 60 330;
#P connect 7 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 9 1;
#P connect 11 0 9 1;
#P connect 7 1 11 0;
#P connect 7 2 9 2;
#P connect 12 0 9 2;
#P connect 7 2 12 0;
#P fasten 9 1 0 1 138 130 263 130;
#P lcolor 1;
#P fasten 9 2 0 2 216 128 451 128;
#P lcolor 1;
#P fasten 2 0 3 0 90 177 464 177;
#P fasten 1 0 3 0 60 297 464 297;
#P fasten 0 0 3 0 75 209 464 209;
#P pop;
#P newobj 267 144 79 9109513 p threestreams;
#N vpatcher 670 81 1270 481;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 111 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 36 72 52 9109513 p store_ID;
#P newex 28 97 85 9109513 buddy 2;
#P newex 28 24 122 9109513 jcom.oscroute /stream_IDs;
#P window linecount 0;
#P newex 28 49 160 9109513 jcom.oscroute /0 /1;
#P outlet 28 332 15 0;
#P inlet 28 3 15 0;
#P window linecount 1;
#P newex 28 125 40 9109513 t b l b;
#P newex 459 297 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 58 149 154 9240586 script delete sdif_write;
#P window linecount 4;
#P message 28 225 413 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 43 177 321 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1;
#P connect 5 0 8 0;
#P connect 8 0 7 0;
#P connect 7 0 9 0;
#P connect 10 0 9 0;
#P connect 9 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 464 323 33 323;
#P fasten 8 1 6 0 145 45 543 45 543 323 33 323;
#P connect 7 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 11 0 9 1;
#P connect 7 1 9 1;
#P connect 7 1 11 0;
#P connect 9 1 0 1;
#P fasten 0 0 3 0 48 218 464 218;
#P fasten 1 0 3 0 33 289 464 289;
#P fasten 2 0 3 0 63 170 464 170;
#P pop;
#P newobj 194 144 72 9109513 p twostreams;
#N vpatcher 171 57 771 457;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the strem IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 101 52 9109513 p store_ID;
#P newex 55 74 78 9109513 jcom.oscroute /0;
#P newex 55 50 122 9109513 jcom.oscroute /stream_IDs;
#P outlet 55 314 15 0;
#P newex 55 129 40 9109513 t b l b;
#P newex 467 274 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 153 154 9240586 script delete sdif_write;
#P window linecount 4;
#P message 55 213 399 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_1 1 sdif_write 0 \, clean;
#P inlet 55 23 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 70 181 370 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0;
#P connect 1 0 7 0;
#P connect 7 0 8 0;
#P connect 8 0 5 0;
#P connect 9 0 5 0;
#P connect 5 0 2 0;
#P fasten 4 0 6 0 472 308 60 308;
#P fasten 7 1 6 0 172 125 563 125 563 308 60 308;
#P connect 8 0 9 0;
#P connect 5 1 0 0;
#P connect 5 2 3 0;
#P fasten 0 0 4 0 75 208 472 208;
#P fasten 3 0 4 0 90 174 472 174;
#P fasten 2 0 4 0 60 272 472 272;
#P pop;
#P newobj 128 144 65 9109513 p onestream;
#P newex 75 47 139 9109513 jcom.oscroute /streamcount;
#P inlet 75 23 15 0;
#P objectname inlet;
#P comment 188 340 320 9109513 An ftm.sdif.write object is generated within the dynamic_patcher.mxt.;
#P fasten 2 0 18 0 80 69 25 69;
#P connect 18 0 29 0;
#P connect 29 0 28 0;
#P connect 1 0 2 0;
#P connect 2 0 26 0;
#P connect 26 0 27 0;
#P connect 27 0 13 0;
#P fasten 27 0 14 0 80 222 101 222;
#P connect 14 0 15 0;
#P connect 15 0 31 0;
#P connect 31 0 17 0;
#P connect 17 0 16 0;
#P fasten 6 0 3 0 209 140 133 140;
#P connect 3 0 26 1;
#P fasten 21 0 13 1 343 49 717 49 717 338 178 338;
#P fasten 6 0 4 0 209 140 199 140;
#P connect 2 1 6 0;
#P connect 4 0 26 2;
#P fasten 6 0 5 0 209 140 272 140;
#P connect 5 0 26 3;
#P fasten 6 0 7 0 209 140 352 140;
#P connect 7 0 26 4;
#P fasten 6 0 9 0 209 140 420 140;
#P connect 9 0 26 5;
#P fasten 6 0 10 0 209 140 488 140;
#P connect 10 0 26 6;
#P fasten 6 0 11 0 209 140 556 140;
#P connect 11 0 26 7;
#P connect 12 0 26 8;
#P fasten 6 0 12 0 209 140 634 140;
#P pop;
