max v2;
#N vpatcher 265 240 1254 643;
#P origin -70 15;
#P window setfont "Sans Serif" 9.;
#P newex 73 312 28 9109513 del 1;
#P comment 738 220 191 9109513 4. a recording just ended;
#P message 46 334 14 9109513 1;
#P newex 73 203 47 9109513 jcom.thru;
#P newex 73 178 559 9109513 switch 8 1;
#P comment 355 28 218 9109513 Data and nvts to be recorded in the sdif file;
#P comment 738 126 169 9109513 These are the /order cues:;
#P window linecount 2;
#P comment 738 140 191 9109513 1. the streamcount parameter is adjusted \, and thereby the patcher is reset;
#P window linecount 1;
#P comment 738 205 191 9109513 3. a /file message is sent to the module;
#P inlet 336 26 15 0;
#P objectname inlet[1];
#P window linecount 3;
#P comment 738 167 191 9109513 2: ftm.sdif.write is generated within the dynamic patcher -OR- the module just stopped a recroding;
#P comment 738 84 169 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 46 312 21 9109513 t b;
#P message 73 334 14 9109513 2;
#P newex 73 358 102 9109513 s $0_order;
#P newex 73 288 45 9109513 sel clean;
#P newex 73 265 96 9109513 jcom.oscroute /script;
#P newex 206 358 188 9109513 dynamic_patcher.mxt;
#N vpatcher 196 146 919 640;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 372 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 313 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 497 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 434 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 249 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 186 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 124 112 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 62 112 52 9109513 p store_ID;
#P newex 54 87 510 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5 /6 /7;
#P newex 54 56 173 9109513 jcom.oscroute /stream_IDs;
#P window linecount 0;
#P newex 54 140 449 9109513 buddy 8;
#P outlet 54 428 15 0;
#P inlet 54 35 15 0;
#P window linecount 1;
#P newex 54 172 40 9109513 t b l b;
#P newex 456 399 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 84 196 154 9240586 script delete sdif_write;
#P window linecount 9;
#P message 54 272 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_2 4 sdif_write 4 \, script connect jcom.oscroute_2 5 sdif_write 5 \, script connect jcom.oscroute_2 6 sdif_write 6 \, script connect jcom.oscroute_2 7 sdif_write 7 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 69 224 256 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5 %s 6 %s 7;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 461 423 59 423;
#P fasten 8 1 6 0 222 77 642 77 642 423 59 423;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 9 3 13 0;
#P connect 7 6 0 6;
#P lcolor 1;
#P connect 9 4 7 4;
#P connect 16 0 7 4;
#P connect 9 4 16 0;
#P connect 7 7 0 7;
#P lcolor 1;
#P connect 9 5 7 5;
#P connect 17 0 7 5;
#P connect 9 5 17 0;
#P connect 9 6 7 6;
#P connect 14 0 7 6;
#P connect 9 6 14 0;
#P fasten 1 0 3 0 59 396 461 396;
#P fasten 2 0 3 0 89 217 461 217;
#P fasten 0 0 3 0 74 267 461 267;
#P connect 9 7 7 7;
#P connect 15 0 7 7;
#P connect 9 7 15 0;
#P pop;
#P newobj 628 147 70 9109513 p eightstreams;
#N vpatcher 39 178 638 638;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 120 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 462 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 396 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 331 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 259 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 194 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 129 97 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 120 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 97 52 9109513 p store_ID;
#P newex 54 67 474 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5 /6;
#P newex 54 42 492 9109513 jcom.oscroute /stream_IDs;
#P newex 54 135 408 9109513 buddy 7;
#P outlet 54 419 15 0;
#P inlet 54 21 15 0;
#P newex 54 167 40 9109513 t b l b;
#P newex 456 385 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 84 191 154 9240586 script delete sdif_write;
#P window linecount 8;
#P message 54 256 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_2 4 sdif_write 4 \, script connect jcom.oscroute_2 5 sdif_write 5 \, script connect jcom.oscroute_2 6 sdif_write 6 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 69 219 239 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5 %s 6;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 461 410 59 410;
#P fasten 8 1 6 0 541 109 541 109 541 410 59 410;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 7 6 0 6;
#P lcolor 1;
#P connect 9 4 7 4;
#P connect 14 0 7 4;
#P connect 9 4 14 0;
#P connect 9 5 7 5;
#P connect 15 0 7 5;
#P connect 9 5 15 0;
#P connect 9 6 7 6;
#P connect 16 0 7 6;
#P fasten 2 0 3 0 89 212 461 212;
#P fasten 1 0 3 0 59 380 461 380;
#P fasten 0 0 3 0 74 253 461 253;
#P connect 9 6 16 0;
#P pop;
#P newobj 549 147 76 9109513 p sevenstreams;
#N vpatcher 242 196 842 595;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 472 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 120 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 393 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 309 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 228 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 150 79 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 71 79 52 9109513 p store_ID;
#P newex 55 54 502 9109513 jcom.oscroute /0 /1 /2 /3 /4 /5;
#P newex 55 27 141 9109513 jcom.oscroute /stream_IDs;
#P window linecount 0;
#P newex 55 104 420 9109513 buddy 6;
#P outlet 55 381 15 0;
#P inlet 55 6 15 0;
#P window linecount 1;
#P newex 55 129 40 9109513 t b l b;
#P newex 457 347 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 153 154 9240586 script delete sdif_write;
#P window linecount 7;
#P message 55 229 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_2 4 sdif_write 4 \, script connect jcom.oscroute_2 5 sdif_write 5 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 70 181 239 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4 %s 5;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 462 372 60 372;
#P fasten 8 1 6 0 191 49 574 49 574 372 60 372;
#P connect 4 1 0 0;
#P connect 9 0 10 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 7 5 0 5;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 9 4 7 4;
#P connect 14 0 7 4;
#P connect 9 4 14 0;
#P fasten 0 0 3 0 75 224 462 224;
#P fasten 1 0 3 0 60 332 462 332;
#P fasten 2 0 3 0 90 174 462 174;
#P connect 9 5 7 5;
#P connect 15 0 7 5;
#P connect 9 5 15 0;
#P pop;
#P newobj 481 147 62 9109513 p sixstreams;
#N vpatcher 716 184 1316 624;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 371 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 287 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 203 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 119 93 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 32 93 52 9109513 p store_ID;
#P newex 22 67 442 9109513 jcom.oscroute /0 /1 /2 /3 /4;
#P window linecount 0;
#P newex 22 40 492 9109513 jcom.oscroute /stream_IDs;
#P newex 22 119 357 9109513 buddy 5;
#P outlet 22 403 15 0;
#P inlet 22 19 15 0;
#P window linecount 1;
#P newex 22 151 40 9109513 t b l b;
#P newex 424 369 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 52 175 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 22 251 404 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_2 4 sdif_write 4 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 37 203 222 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3 %s 4;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 429 394 27 394;
#P fasten 8 1 6 0 509 93 509 93 509 394 27 394;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 9 1 11 0;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 2 12 0;
#P connect 7 4 0 4;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P connect 9 4 7 4;
#P connect 14 0 7 4;
#P connect 9 4 14 0;
#P fasten 0 0 3 0 42 246 429 246;
#P fasten 2 0 3 0 57 196 429 196;
#P fasten 1 0 3 0 27 354 429 354;
#P pop;
#P newobj 413 147 67 9109513 p fivestreams;
#P window linecount 2;
#P comment 259 297 320 9109513 The ftm.sdif.write needs different arguments according to the amount of streams and the stream IDs.;
#P window linecount 1;
#N vpatcher 209 211 825 692;
#P origin 0 -3;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 120 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 289 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 214 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 139 72 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 72 52 9109513 p store_ID;
#P newex 53 47 310 9109513 jcom.oscroute /0 /1 /2 /3;
#P window linecount 0;
#P newex 53 21 492 9109513 jcom.oscroute /stream_IDs;
#P newex 53 95 236 9109513 buddy 4;
#P outlet 53 379 15 0;
#P inlet 53 0 15 0;
#P window linecount 1;
#P newex 53 127 40 9109513 t b l b;
#P newex 455 345 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 83 151 154 9240586 script delete sdif_write;
#P window linecount 6;
#P message 53 227 380 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_2 3 sdif_write 3 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 68 179 219 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2 %s 3;
#P connect 5 0 8 0;
#P connect 8 0 9 0;
#P connect 9 0 7 0;
#P connect 10 0 7 0;
#P connect 7 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 460 370 58 370;
#P fasten 8 1 6 0 540 69 540 69 540 370 58 370;
#P connect 9 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 9 1 7 1;
#P connect 11 0 7 1;
#P connect 7 1 0 1;
#P lcolor 1;
#P connect 9 1 11 0;
#P connect 9 2 7 2;
#P connect 12 0 7 2;
#P connect 7 2 0 2;
#P lcolor 1;
#P connect 9 2 12 0;
#P connect 7 3 0 3;
#P lcolor 1;
#P connect 9 3 7 3;
#P connect 13 0 7 3;
#P connect 9 3 13 0;
#P fasten 1 0 3 0 58 330 460 330;
#P fasten 2 0 3 0 88 172 460 172;
#P fasten 0 0 3 0 73 222 460 222;
#P pop;
#P newobj 345 147 67 9109513 p fourstreams;
#N vpatcher 84 416 893 743;
#P origin 17 -188;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#P comment 401 263 181 9109513 Order: All stored stream definition messages are sent again when another stream changes;
#P window linecount 1;
#P newex 7 102 51 9109513 onebang 1;
#P message 7 152 14 9109513 1;
#P window linecount 0;
#P newex 7 79 19 9109513 t b;
#P window linecount 1;
#P newex 7 125 28 9109513 del 1;
#P newex 7 173 100 9109513 s $0_order;
#P newex 7 52 102 9109513 jcom.oscroute /stream;
#N vpatcher 599 70 1209 565;
#P origin 0 -41;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#P message 216 138 24 9109513 set;
#P window linecount 2;
#P comment 81 414 360 9109513 the order 4 closes the above gate and thus prevents the same file name from being sent to ftm.sdif.record;
#P window linecount 1;
#P message 244 138 14 9109513 0;
#P message 258 138 14 9109513 1;
#P newex 293 179 42 9109513 gate 1 1;
#P window linecount 0;
#P newex 244 88 95 9109513 r $0_order;
#P message 63 272 24 9109513 4 \, 2;
#P window linecount 2;
#P comment 81 386 360 9109513 If ftm.sdif.write has not yet been generated in the dynamic patcher \, the open message is stored. It is executed when a /order 2 message is received;
#P window linecount 1;
#P message 304 138 14 9109513 1;
#P message 290 138 14 9109513 2;
#P newex 76 171 42 9109513 gate 2 2;
#P newex 325 138 33 9109513 del 10;
#P newex 244 109 101 9109513 sel 4 1 2;
#P window linecount 0;
#P message 108 225 380 9109513;
#P window linecount 1;
#P newex 108 196 57 9109513 prepend set;
#P newex 88 293 52 9109513 s $0_order;
#P message 88 272 14 9109513 3;
#P button 88 255 15 0;
#P newex 108 127 64 9109513 prepend open;
#P message 49 198 26 9109513 stop;
#P message 21 198 27 9109513 start;
#P newex 21 166 40 9109513 sel 1 0;
#P newex 21 331 99 9109513 prepend /write_control;
#P newex 21 54 184 9109513 jcom.oscroute /record /file;
#P outlet 21 369 15 0;
#P inlet 21 36 15 0;
#P comment 79 372 100 9109513 Order system:;
#P connect 1 0 3 0;
#P connect 3 0 5 0;
#P connect 5 0 6 0;
#P fasten 16 0 4 0 81 230 26 230;
#P fasten 13 0 4 0 113 254 169 254 169 327 26 327;
#P fasten 7 0 4 0 54 226 26 226;
#P connect 6 0 4 0;
#P fasten 3 2 2 0 200 81 515 81 515 361 26 361;
#P connect 4 0 2 0;
#P fasten 5 1 7 0 41 192 54 192;
#P connect 5 1 20 0;
#P fasten 18 0 16 0 309 163 81 163;
#P lcolor 1;
#P fasten 17 0 16 0 295 163 81 163;
#P lcolor 1;
#P connect 16 0 9 0;
#P fasten 13 0 9 0 113 245 93 245;
#P connect 9 0 10 0;
#P connect 20 0 11 0;
#P connect 10 0 11 0;
#P fasten 3 1 8 0 113 121 113 121;
#P connect 8 0 16 1;
#P connect 16 0 12 0;
#P connect 16 1 12 0;
#P fasten 22 0 13 0 298 218 113 218;
#P connect 12 0 13 0;
#P connect 26 0 13 0;
#P connect 14 0 26 0;
#P connect 21 0 14 0;
#P connect 14 0 24 0;
#P connect 14 1 23 0;
#P connect 14 1 17 0;
#P connect 23 0 22 0;
#P connect 24 0 22 0;
#P connect 14 2 18 0;
#P connect 14 2 15 0;
#P connect 15 0 22 1;
#P pop;
#P newobj 663 85 119 9109513 p write_control_commands;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 594 218 67 9109513 p streamdef 7;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 525 218 67 9109513 p streamdef 6;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 456 218 67 9109513 p streamdef 5;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 387 218 67 9109513 p streamdef 4;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 318 218 67 9109513 p streamdef 3;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 249 218 67 9109513 p streamdef 2;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P fasten 6 1 2 0 36 141 21 141;
#P connect 6 0 2 0;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P window linecount 1;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P window linecount 4;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 0 14 0;
#P connect 16 1 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 180 218 67 9109513 p streamdef 1;
#N vpatcher 418 46 1146 637;
#P origin 0 -15;
#P window setfont "Sans Serif" 9.;
#N vpatcher 44 115 296 330;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 16 119 40 9109513 sel 1 2;
#P newex 16 53 19 9109513 t 1;
#P window linecount 0;
#P newex 16 97 29 9109513 zl len;
#P newex 16 75 42 9109513 thresh 1;
#P outlet 16 145 15 0;
#P inlet 16 34 15 0;
#P comment 77 51 100 9109513 If all three variables is changed at once \, the stored messages inside "store_def" will not be banged out.;
#P connect 1 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 4 0;
#P connect 4 0 6 0;
#P connect 6 0 2 0;
#P fasten 6 1 2 0 36 141 21 141;
#P pop;
#P newobj 235 57 65 9109513 p change_def;
#P window linecount 1;
#P newex 277 116 47 9109513 tosymbol;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 337 116 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 3 0 4 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 4 0 2 0;
#P connect 7 0 5 0;
#P pop;
#P newobj 277 138 56 9109513 p store_def;
#N vpatcher 807 64 1107 266;
#P inlet 84 34 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 125 85 120 9109513 in the case of changing of the stream definitions \, all parts of the definition is banged out so it does not have to be re-initialized from the GUI;
#P window linecount 1;
#P newex 84 70 19 9109513 t b;
#P window linecount 0;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 126 29 100 9109513 Each part of the stream definition is stored in a separate subpatcher;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 5 0 4 0 89 96 25 96;
#P connect 4 0 2 0;
#P fasten 1 0 2 0 25 55 9 55 9 123 25 123;
#P connect 7 0 5 0;
#P pop;
#P newobj 217 116 56 9109513 p store_def;
#P newex 507 143 100 9109513 r $0_order;
#P comment 32 554 446 9109513 - If [2] and then [3] \, any stream definition message is directly forwarded to the dynamic patcher;
#P comment 32 538 394 9109513 - If [1] \, any stream definition message is put on hold \, and banged out after [2] and [3];
#P comment 24 524 291 9109513 In this subpatcher \, the order system works like this:;
#P comment 251 491 300 9109513 3. a /file message is sent to the module;
#P comment 251 477 291 9109513 2: ftm.sdif.write is generated within the dynamic patcher;
#P newex 77 256 44 9109513 pack s 0;
#P newex 77 282 31 9109513 zl rev;
#P comment 251 463 253 9109513 1. the streamcount parameter is adjusted;
#P window linecount 2;
#P comment 247 436 212 9109513 The /order system is a system for making the order of input messages to the module arbitrary;
#P window linecount 1;
#P newex 541 211 44 9109513 onebang;
#P message 507 283 14 9109513 2;
#P newex 507 171 114 9109513 sel 1 3 2;
#P newex 541 253 33 9109513 del 50;
#P window linecount 0;
#P message 524 283 14 9109513 1;
#P window linecount 1;
#P newex 185 343 42 9109513 gate 2 2;
#P window linecount 0;
#P message 217 407 394 9109513;
#P window linecount 1;
#P newex 217 375 57 9109513 prepend set;
#P newex 111 230 75 9109513 route streamdef;
#P comment 90 190 117 9109513 argument: stream number;
#P newex 111 208 57 9109513 patcherargs;
#P newex 217 159 130 9109513 buddy 3;
#P newex 77 307 137 9109513 sprintf /stream_IDs/%ld %s;
#P window linecount 0;
#P newex 217 256 47 9109513 tosymbol;
#P newex 273 190 75 9109513 prepend symbol;
#P newex 217 93 192 9109513 jcom.oscroute /ID /variables /description;
#P newex 217 282 70 9109513 prepend define;
#P newex 217 230 237 9109513 sprintf "1MTD %s { %s } 1FTD %s { %s %s\\\\\\\; }";
#P newex 217 307 117 9109513 prepend /write_control;
#P inlet 217 26 15 0;
#P outlet 147 444 15 0;
#P comment 380 141 144 9109513 waiting for the full stream definition before sending the define message;
#P fasten 32 0 25 0 222 145 82 145;
#P connect 25 0 24 0;
#P connect 24 0 9 0;
#P connect 11 0 13 0;
#P connect 13 0 25 1;
#P connect 16 0 1 0;
#P fasten 15 0 1 0 222 438 152 438;
#P fasten 9 0 1 0 82 433 152 433;
#P fasten 17 0 16 0 529 337 190 337;
#P lcolor 1;
#P fasten 20 0 16 0 512 337 190 337;
#P lcolor 1;
#P connect 2 0 6 0;
#P connect 6 0 32 0;
#P connect 32 0 10 0;
#P connect 10 0 4 0;
#P connect 4 0 8 0;
#P connect 8 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 16 1;
#P connect 16 1 14 0;
#P connect 16 0 14 0;
#P fasten 18 0 15 0 546 398 222 398;
#P connect 14 0 15 0;
#P fasten 2 0 36 0 222 46 240 46;
#P connect 36 0 32 1;
#P lcolor 1;
#P connect 10 1 7 0;
#P connect 7 0 4 1;
#P connect 6 1 35 0;
#P connect 35 0 33 0;
#P connect 33 0 10 1;
#P connect 36 0 33 1;
#P lcolor 1;
#P connect 32 0 4 2;
#P connect 6 2 34 0;
#P connect 34 0 10 2;
#P connect 36 0 34 1;
#P lcolor 1;
#P connect 32 0 4 3;
#P connect 10 2 4 4;
#P connect 31 0 19 0;
#P connect 19 0 20 0;
#P connect 18 0 17 0;
#P connect 19 1 21 0;
#P connect 21 0 18 0;
#P connect 19 2 21 1;
#P pop;
#P newobj 111 218 67 9109513 p streamdef 0;
#P inlet 111 26 15 0;
#P outlet 111 277 15 0;
#P newex 111 52 567 9109513 jcom.oscroute /stream/0 /stream/1 /stream/2 /stream/3 /stream/4 /stream/5 /stream/6 /stream/7;
#P window linecount 3;
#P comment 131 259 181 9109513 A message generating stream definitions for the ftm.sdif.write object is generated inside the streamdef subpatchers;
#P fasten 3 0 13 0 116 46 12 46;
#P connect 13 0 16 0;
#P connect 16 0 18 0;
#P connect 18 0 15 0;
#P connect 15 0 17 0;
#P connect 17 0 14 0;
#P fasten 15 0 18 1 12 147 60 147 60 98 53 98;
#P connect 3 0 1 0;
#P connect 1 0 4 0;
#P fasten 4 0 2 0 116 250 116 250;
#P fasten 12 0 2 0 668 250 116 250;
#P fasten 5 0 2 0 185 250 116 250;
#P fasten 6 0 2 0 254 250 116 250;
#P fasten 7 0 2 0 323 250 116 250;
#P fasten 8 0 2 0 392 250 116 250;
#P fasten 9 0 2 0 461 250 116 250;
#P fasten 10 0 2 0 530 250 116 250;
#P fasten 11 0 2 0 599 250 116 250;
#P connect 1 1 5 0;
#P connect 1 2 6 0;
#P connect 1 3 7 0;
#P connect 1 4 8 0;
#P connect 1 5 9 0;
#P connect 1 6 10 0;
#P connect 1 7 11 0;
#P connect 1 8 12 0;
#P pop;
#P newobj 202 92 59 9109513 p definitions;
#N vpatcher 110 193 710 592;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 218 83 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 140 83 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 62 83 52 9109513 p store_ID;
#P newex 55 107 167 9109513 buddy 3;
#P newex 55 33 310 9109513 jcom.oscroute /stream_IDs;
#P newex 55 58 244 9109513 jcom.oscroute /0 /1 /2;
#P outlet 55 339 15 0;
#P inlet 55 12 15 0;
#P window linecount 1;
#P newex 55 132 40 9109513 t b l b;
#P newex 459 305 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 156 154 9240586 script delete sdif_write;
#P window linecount 5;
#P message 55 219 399 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_2 2 sdif_write 2 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 70 184 386 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1 %s 2;
#P connect 5 0 8 0;
#P connect 8 0 7 0;
#P connect 7 0 9 0;
#P connect 10 0 9 0;
#P connect 9 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 464 330 60 330;
#P fasten 8 1 6 0 360 93 542 93 542 330 60 330;
#P connect 7 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 9 1;
#P connect 11 0 9 1;
#P connect 7 1 11 0;
#P connect 7 2 9 2;
#P connect 12 0 9 2;
#P connect 7 2 12 0;
#P fasten 9 1 0 1 138 130 263 130;
#P lcolor 1;
#P fasten 9 2 0 2 216 128 451 128;
#P lcolor 1;
#P fasten 2 0 3 0 90 177 464 177;
#P fasten 1 0 3 0 60 297 464 297;
#P fasten 0 0 3 0 75 209 464 209;
#P pop;
#P newobj 265 147 79 9109513 p threestreams;
#N vpatcher 422 67 1022 467;
#P origin 0 -18;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 120 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 111 90 52 9109513 p store_ID;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P connect 3 0 4 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 36 90 52 9109513 p store_ID;
#P newex 28 115 85 9109513 buddy 2;
#P newex 28 42 122 9109513 jcom.oscroute /stream_IDs;
#P newex 28 67 160 9109513 jcom.oscroute /0 /1;
#P outlet 28 350 15 0;
#P inlet 28 21 15 0;
#P window linecount 1;
#P newex 28 143 40 9109513 t b l b;
#P newex 459 315 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 58 167 154 9240586 script delete sdif_write;
#P window linecount 4;
#P message 28 243 426 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_2 1 sdif_write 1 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 43 195 373 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0 %s 1;
#P connect 5 0 8 0;
#P connect 8 0 7 0;
#P connect 7 0 9 0;
#P connect 10 0 9 0;
#P connect 9 0 4 0;
#P connect 4 0 1 0;
#P fasten 3 0 6 0 464 341 33 341;
#P fasten 8 1 6 0 145 63 543 63 543 341 33 341;
#P connect 7 0 10 0;
#P connect 4 1 0 0;
#P connect 4 2 2 0;
#P connect 7 1 9 1;
#P connect 11 0 9 1;
#P connect 7 1 11 0;
#P connect 9 1 0 1;
#P fasten 0 0 3 0 48 236 464 236;
#P fasten 1 0 3 0 33 307 464 307;
#P fasten 2 0 3 0 63 188 464 188;
#P pop;
#P newobj 192 147 72 9109513 p twostreams;
#N vpatcher 164 55 764 455;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#N vpatcher 360 57 711 259;
#P window setfont "Sans Serif" 9.;
#P window linecount 6;
#P comment 166 78 107 9109513 in the case of changing of the streamcount (order 1) \, the stream IDs are banged out so that they do not have to be re-initialized from the UI.;
#P window linecount 1;
#P newex 96 72 28 9109513 sel 1;
#P window linecount 0;
#P newex 96 49 50 9109513 r $0_order;
#P message 20 102 50 9109513;
#P newex 20 62 57 9109513 prepend set;
#P outlet 20 127 15 0;
#P inlet 20 34 15 0;
#P comment 165 34 100 9109513 All stream IDs are stored here \, one for each stream;
#P connect 1 0 3 0;
#P fasten 6 0 4 0 101 96 25 96;
#P connect 3 0 4 0;
#P connect 4 0 2 0;
#P connect 5 0 6 0;
#P pop;
#P newobj 64 101 52 9109513 p store_ID;
#P newex 55 74 78 9109513 jcom.oscroute /0;
#P newex 55 50 122 9109513 jcom.oscroute /stream_IDs;
#P outlet 55 314 15 0;
#P newex 55 129 40 9109513 t b l b;
#P newex 467 274 81 9109513 prepend /script;
#P window setfont "Fixedwidth Serif" 10.;
#P message 85 153 154 9240586 script delete sdif_write;
#P window linecount 3;
#P message 55 213 410 9240586 script offsetfrom sdif_write tp 1 80 0 \, script connect jcom.oscroute_3 0 sdif_write 0 \, script connect jcom.oscroute_2 0 sdif_write 0 \, script connect jcom.oscroute_1 2 sdif_write 0 \, clean;
#P inlet 55 23 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 70 181 370 9109513 sprintf script new sdif_write newex 100 400 44 9109513 ftm.sdif.write %s 0;
#P connect 1 0 7 0;
#P connect 7 0 8 0;
#P connect 8 0 5 0;
#P connect 9 0 5 0;
#P connect 5 0 2 0;
#P fasten 4 0 6 0 472 308 60 308;
#P fasten 7 1 6 0 172 125 563 125 563 308 60 308;
#P connect 8 0 9 0;
#P connect 5 1 0 0;
#P connect 5 2 3 0;
#P fasten 0 0 4 0 75 208 472 208;
#P fasten 3 0 4 0 90 174 472 174;
#P fasten 2 0 4 0 60 272 472 272;
#P pop;
#P newobj 126 147 65 9109513 p onestream;
#P newex 73 50 139 9109513 jcom.oscroute /streamcount;
#P inlet 73 26 15 0;
#P objectname inlet;
#P comment 259 283 320 9109513 An ftm.sdif.write object is generated within the dynamic_patcher.mxt.;
#P fasten 2 0 18 0 78 72 51 72;
#P connect 18 0 28 0;
#P connect 1 0 2 0;
#P connect 2 0 26 0;
#P connect 26 0 27 0;
#P fasten 27 0 14 0 78 225 78 225;
#P connect 14 0 15 0;
#P connect 15 0 30 0;
#P connect 30 0 17 0;
#P connect 17 0 16 0;
#P fasten 28 0 16 0 51 354 78 354;
#P fasten 6 0 3 0 207 143 131 143;
#P connect 3 0 26 1;
#P fasten 6 0 4 0 207 143 197 143;
#P connect 2 1 6 0;
#P fasten 27 0 13 0 78 233 211 233;
#P connect 4 0 26 2;
#P fasten 6 0 5 0 207 143 270 143;
#P connect 5 0 26 3;
#P fasten 6 0 7 0 207 143 350 143;
#P connect 7 0 26 4;
#P fasten 21 0 13 1 341 52 715 52 715 341 389 341;
#P fasten 6 0 9 0 207 143 418 143;
#P connect 9 0 26 5;
#P fasten 6 0 10 0 207 143 486 143;
#P connect 10 0 26 6;
#P fasten 6 0 11 0 207 143 554 143;
#P connect 11 0 26 7;
#P connect 12 0 26 8;
#P fasten 6 0 12 0 207 143 633 143;
#P pop;
