max v2;#N vpatcher 229 119 750 582;#P window setfont "Sans Serif" 9.;#P comment 102 36 75 196617 receive region;#P comment 49 421 174 196617 send the value out as a jitter matrix;#P comment 265 421 175 196617 send the value out as a max message;#P comment 129 239 215 196617 envelope filter the value with respect to time;#P comment 126 309 367 196617 is the value greater than the specified post filtered value? if so \, pass the value;#P window linecount 2;#P comment 135 158 221 196617 is the value greater than the specified pre filtered value? if so \, full on \, otherwise full off;#P window linecount 1;#P comment 102 85 279 196617 scale to range 0.-1. floating point and place in a 1x1 matrix;#P newex 260 369 40 196617 / 255.;#P newex 107 284 106 196617 r region_thresh_post;#P newex 49 307 68 196617 jit.op @op >p;#P newex 260 391 45 196617 s $1val;#P newex 260 344 41 196617 jit.iter;#P newex 49 86 40 196617 / 255.;#P newex 102 136 102 196617 r region_thresh_pre;#P message 224 207 75 196617 slide_down \$1;#P newex 224 186 102 196617 r region_slide_down;#P message 128 207 62 196617 slide_up \$1;#P newex 49 158 63 196617 jit.op @op >;#P newex 49 234 45 196617 jit.slide;#P newex 128 186 89 196617 r region_slide_up;#P newex 49 112 105 196617 jit.matrix 1 char 1 1;#P newex 35 59 53 196617 jit.3m;#P newex 49 392 36 196617 s $1b;#P newex 35 28 36 196617 r $1a;#P comment 102 62 170 196617 find mean (average) value of region;#P connect 1 0 3 0;#P connect 3 1 12 0;#P connect 12 0 4 0;#P connect 4 0 7 0;#P fasten 10 0 6 0 229 228 54 228;#P fasten 8 0 6 0 133 228 54 228;#P connect 7 0 6 0;#P connect 6 0 15 0;#P connect 15 0 2 0;#P connect 11 0 7 1;#P connect 16 0 15 1;#P connect 5 0 8 0;#P connect 9 0 10 0;#P fasten 15 0 13 0 54 334 265 334;#P connect 13 0 17 0;#P connect 17 0 14 0;#P pop;