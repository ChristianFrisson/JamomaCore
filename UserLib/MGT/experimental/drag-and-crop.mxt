max v2;#N vpatcher 142 44 1164 796;#P origin 0 73;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 194 430 53 196617 Threshold;#P message 250 430 33 196617 reset;#P window linecount 2;#P user com 98 424 60 196617 9;#K set 0 16757 29807 11533 25455 28276 29281 25460 26991 28160;#K end;#P user ubumenu 179 697 54 196617 0 1 1 0;#X add Original;#X add Motion;#X add Binary;#X prefix_set 0 0 <none> 0;#P window linecount 1;#P hidden newex 126 147 49 196617 t 0.1 2 1;#P hidden newex 78 147 45 196617 loadbang;#P flonum 90 698 35 9 0. 1. 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P toggle 26 699 15 0;#N vpatcher 692 44 1381 823;#P origin -29 0;#P window setfont "Sans Serif" 9.;#P newex 17 214 27 196617 + 1;#P number 582 597 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 548 597 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 514 597 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 514 568 65 196617 unpack 0 0 0;#P user swatch 514 510 121 51;#P inlet 497 29 15 0;#P comment 3 235 105 196617 Choose output stream;#P comment 306 711 194 196617 The values that draw the white rectangle;#P number 17 254 26 9 0 3 3 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 17 279 53 196617 switch 3;#P outlet 17 720 15 0;#P newex 17 678 110 196617 jit.lcd 1 char 320 240;#P newex 32 640 95 196617 v draw-contraction;#P newex 17 595 40 196617 t b b l;#P newex 171 538 39 196617 / 240.;#P newex 118 538 39 196617 / 320.;#P newex 118 516 63 196617 unpack 0. 0.;#P newex 118 495 52 196617 route dim;#P newex 118 474 71 196617 jit.matrixinfo;#N comlet Threshold;#P inlet 381 29 15 0;#N comlet Open/close;#P inlet 259 29 15 0;#N comlet Video stream;#P inlet 318 29 15 0;#P toggle 259 56 15 0;#P newex 259 77 27 196617 gate;#P newex 208 708 95 196617 v draw-contraction;#P newex 208 682 413 196617 pak framerect 0 0 0 0 255 255 255;#P newex 294 648 27 196617 / 1.;#P newex 231 648 27 196617 / 1.;#P message 334 136 75 196617 outputmatrix 0;#P newex 334 156 194 196617 jit.matrixset 1 1 char 320 240 @index 0;#P newex 259 181 85 196617 jit.op @op absdiff;#P newex 259 100 40 196617 t l l b;#P comment 417 191 68 196617 set threshold;#P flonum 381 191 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 259 211 132 196617 jit.op @op > @val 0.1;#P newex 420 648 27 196617 / 1.;#P newex 359 648 27 196617 / 1.;#P comment 437 309 50 196617 boundmax;#P comment 206 310 50 196617 boundmin;#P newex 403 308 35 196617 sel -1;#P newex 367 308 35 196617 sel -1;#P newex 295 308 35 196617 sel -1;#P newex 259 308 35 196617 sel -1;#P newex 367 286 46 196617 unpack;#P newex 420 363 58 196617 arj.smooth;#P newex 359 363 58 196617 arj.smooth;#P newex 294 363 58 196617 arj.smooth;#P newex 231 363 58 196617 arj.smooth;#P newex 259 286 46 196617 unpack;#P newex 259 266 226 196617 jit.findbounds @min 1 @max 1;#P comment 123 410 100 196617 To compensate if incoming video is different than the drawing window of 320x240;#P connect 45 0 51 0;#P connect 51 0 42 0;#P connect 42 0 41 0;#P connect 41 0 37 0;#P connect 38 0 39 0;#P connect 37 2 39 0;#P connect 37 0 39 0;#P connect 39 0 40 0;#P connect 27 0 41 1;#P connect 37 1 38 0;#P connect 20 0 41 2;#P connect 16 0 41 3;#P fasten 27 0 32 0 264 97 123 97;#P connect 32 0 33 0;#P connect 33 0 34 0;#P connect 34 0 35 0;#P connect 34 1 36 0;#P connect 25 0 26 0;#P connect 8 1 3 0;#P connect 3 0 23 0;#P connect 35 0 23 1;#P connect 30 0 28 0;#P connect 28 0 27 0;#P connect 27 0 19 0;#P connect 19 0 20 0;#P connect 20 0 16 0;#P connect 16 0 1 0;#P connect 1 0 2 0;#P connect 2 0 8 0;#P connect 23 0 25 1;#P connect 29 0 27 1;#P connect 9 1 4 0;#P connect 4 0 24 0;#P connect 2 1 9 0;#P connect 36 0 24 1;#P connect 24 0 25 2;#P connect 19 2 22 0;#P connect 19 1 21 0;#P connect 22 0 21 0;#P connect 21 0 20 1;#P connect 10 1 5 0;#P connect 5 0 14 0;#P connect 1 1 7 0;#P connect 7 0 10 0;#P connect 35 0 14 1;#P connect 14 0 25 3;#P connect 31 0 17 0;#P connect 17 0 16 1;#P connect 7 1 11 0;#P connect 11 1 6 0;#P connect 6 0 15 0;#P connect 15 0 25 4;#P connect 36 0 15 1;#P connect 48 0 25 5;#P connect 46 0 47 0;#P connect 47 0 48 0;#P connect 47 1 49 0;#P connect 49 0 25 6;#P connect 47 2 50 0;#P connect 50 1 25 7;#P pop;#P hidden newobj 26 724 74 196617 p contraction2;#P flonum 159 428 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P toggle 84 426 15 0;#N vpatcher 919 149 1433 885;#P origin -29 0;#P window setfont "Sans Serif" 9.;#P number 310 443 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 249 443 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 184 443 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P number 121 443 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 61 533 39 196617 / 240.;#P newex 8 533 39 196617 / 320.;#P newex 8 504 63 196617 unpack 0. 0.;#P newex 8 483 52 196617 route dim;#P newex 8 462 71 196617 jit.matrixinfo;#P toggle 382 205 15 0;#P newex 382 223 27 196617 gate;#P newex 223 663 79 196617 pak 0 0 0 0 0 0;#P newex 336 629 42 196617 arj.diff;#P newex 281 629 42 196617 arj.diff;#P button 65 615 15 0;#P newex 223 694 64 196617 s draw-rect;#P user jit.pwindow 381 243 82 62 0 1 0 0 1 0;#N comlet Reset;#P inlet 467 24 15 0;#N comlet Threshold;#P inlet 271 24 15 0;#N comlet Open/close;#P inlet 149 24 15 0;#N comlet Video stream;#P inlet 208 24 15 0;#P button 467 350 15 0;#P message 425 393 33 196617 1000;#P message 467 393 14 196617 0;#P toggle 149 51 15 0;#P newex 149 72 27 196617 gate;#P newex 97 643 65 196617 v draw-rect;#P newex 97 617 109 196617 pak framerect 0 0 0 0;#P newex 184 583 27 196617 / 1.;#P newex 184 416 40 196617 trough;#P newex 121 583 27 196617 / 1.;#P newex 121 416 40 196617 trough;#P message 224 131 75 196617 outputmatrix 0;#P newex 224 151 194 196617 jit.matrixset 1 1 char 320 240 @index 0;#P newex 149 176 85 196617 jit.op @op absdiff;#P newex 149 95 40 196617 t l l b;#P comment 307 186 68 196617 set threshold;#P flonum 271 186 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 149 206 132 196617 jit.op @op > @val 0.1;#P newex 310 583 27 196617 / 1.;#P newex 310 416 40 196617 peak;#P newex 249 583 27 196617 / 1.;#P newex 249 416 40 196617 peak;#P comment 258 395 50 196617 boundmax;#P comment 144 395 50 196617 boundmin;#P newex 293 303 35 196617 sel -1;#P newex 257 303 35 196617 sel -1;#P newex 185 303 35 196617 sel -1;#P newex 149 303 35 196617 sel -1;#P newex 257 281 46 196617 unpack;#P newex 310 358 58 196617 arj.smooth;#P newex 249 358 58 196617 arj.smooth;#P newex 184 358 58 196617 arj.smooth;#P newex 121 358 58 196617 arj.smooth;#P newex 149 281 46 196617 unpack;#P newex 149 261 226 196617 jit.findbounds @min 1 @max 1;#P fasten 30 0 47 0 154 92 13 92;#P connect 47 0 48 0;#P connect 48 0 49 0;#P connect 49 0 50 0;#P connect 49 1 51 0;#P connect 28 0 29 0;#P connect 41 0 29 0;#P connect 7 1 2 0;#P connect 2 0 24 0;#P connect 24 0 52 0;#P connect 52 0 25 0;#P connect 25 0 28 1;#P connect 50 0 25 1;#P connect 27 0 28 2;#P connect 36 0 31 0;#P connect 31 0 30 0;#P connect 30 0 20 0;#P connect 20 0 21 0;#P connect 21 0 17 0;#P connect 17 0 0 0;#P connect 0 0 1 0;#P connect 1 0 7 0;#P connect 33 0 24 1;#P connect 35 0 30 1;#P connect 14 0 28 3;#P connect 8 1 3 0;#P connect 3 0 26 0;#P connect 26 0 53 0;#P connect 53 0 27 0;#P connect 1 1 8 0;#P connect 16 0 28 4;#P connect 51 0 27 1;#P connect 33 0 26 1;#P connect 25 0 44 0;#P connect 44 0 40 0;#P connect 20 2 23 0;#P connect 23 0 22 0;#P connect 20 1 22 0;#P connect 22 0 21 1;#P connect 27 0 44 1;#P connect 9 1 4 0;#P connect 4 0 13 0;#P connect 13 0 54 0;#P connect 54 0 14 0;#P connect 14 0 44 2;#P connect 0 1 6 0;#P connect 6 0 9 0;#P connect 16 0 44 3;#P connect 50 0 14 1;#P connect 37 0 18 0;#P connect 18 0 17 1;#P connect 42 0 44 4;#P connect 32 0 13 1;#P connect 25 0 42 0;#P connect 43 0 44 5;#P connect 6 1 10 0;#P connect 10 1 5 0;#P connect 5 0 15 0;#P connect 15 0 55 0;#P connect 55 0 16 0;#P connect 14 0 42 1;#P connect 51 0 16 1;#P connect 27 0 43 0;#P connect 32 0 15 1;#P connect 16 0 43 1;#P connect 46 0 45 0;#P connect 45 0 39 0;#P connect 17 0 45 1;#P connect 34 0 33 0;#P connect 38 0 34 0;#P connect 34 0 32 0;#P pop;#P hidden newobj 281 429 68 196617 p contraction;#P hidden newex 4 147 65 196617 jit.rgb2luma;#P toggle 344 120 15 0;#P button 344 103 15 0;#P hidden newex 342 144 81 196617 arj.jit.save-file;#P toggle 19 424 15 0;#P hidden newex 245 165 27 196617 gate;#P hidden newex 262 144 60 196617 arj.jit.crop;#P bpatcher 4 76 316 59 0 0  0;#P bpatcher 4 -18 255 60 0 0 jmod.input%.mxt 0 /input%;#P objectname jmod.input%.mxt;#P comment 13 411 311 196617 ctrl-click and drag to crop. alt-click to zoom. cmd-click to offset.;#P comment 37 426 42 196617 Display;#P window linecount 2;#P user com 359 105 73 196617 8;#K set 0 21345 30309 8307 28257 28787 26735 29728 3328;#K end;#P window linecount 1;#P comment 359 121 61 196617 Save movie;#P window linecount 8;#P hidden comment 23 762 335 196617 a) read in a movie b) copy the audio track from another "movie" -- in this case an audio file -- to a new track in the first movie. so \, to jit.qt.movie: "read" \, to read in the movie "copy drive:/path/to/movie2 track 1 track -1" \, to copy the first track from the 2nd movie into a new track in the 1st movie "savemovie" or "savemovieas" \, to save the movie "flatten faststart inplace" \, to flatten the data \, if you want (otherwise \, the movie only contains a "reference" to the audio data \, not the data itself);#P window linecount 1;#P comment 42 700 42 196617 Display;#P comment 124 700 53 196617 Threshold;#P user jit.pwindow 7 169 322 242 0 1 0 0 1 0;#P user jit.pwindow 8 453 322 242 0 1 0 0 1 0;#P user jit.pwindow 345 169 483 530 0 1 0 0 1 0;#P window linecount 5;#P user com 459 90 390 196617 165;#K set 0 21608 26995 8304 24948 25448 8296 25964 28787 8313 28533 8308 28448 25458 28528 8308 26725 8301 28534 26981 8290 31008 25961 29800 25970 8301 24942 30049 27680 28530 8289 30068 28525 24948 26979 8291 28526 29810 24931 29801 28526 11808 3341 21615 8301 24939 25888 26996 8311 28530 27424 30565 27756 11296 31087 29984 29544 28533 27748 8308 29305 8308 28448 28001 27493 8308 26725 8307 28533 29283 25888 30313 25701 28448 24947 8302 28521 29541 11622 29285 25888 24947 8304 28531 29545 25196 25900 8294 28530 8293 30817 28016 27749 8290 31008 29813 29294 26990 26400 30064 8308;#K set 100 26725 8290 29289 26472 29806 25971 29472 24942 25632 25455 28276 29281 29556 11296 24947 8311 25964 27680 24947 8308 29305 8292 26982 26213 29285 28276 8308 26738 25971 26735 27748 8310 24940 30053 29486 8277 29541 8308 26725 8306 25971 25972 8290 30068 29807 28192 24934 29797 29216 25448 24942 26473 28263 8289 28281 8303 26144 29800 25971 25888 29541 29812 26990 26483 11789;#K end;#P hidden connect 14 0 3 0;#P hidden connect 23 0 2 0;#P hidden connect 27 2 15 0;#P hidden connect 27 2 24 0;#P hidden connect 24 0 23 0;#P hidden connect 19 0 23 1;#P hidden connect 25 0 23 2;#P hidden connect 28 0 23 3;#P hidden connect 27 0 25 0;#P hidden connect 26 0 27 0;#P hidden connect 27 0 22 0;#P hidden connect 27 1 28 0;#P hidden connect 15 0 14 0;#P hidden connect 13 0 14 1;#P hidden connect 21 0 20 0;#P hidden connect 19 0 20 1;#P hidden connect 3 1 13 1;#P hidden connect 22 0 20 2;#P hidden connect 30 0 20 3;#P hidden connect 13 1 16 0;#P hidden connect 16 0 18 0;#P hidden connect 13 1 1 0;#P hidden connect 17 0 16 1;#P hidden connect 18 0 16 2;#P pop;