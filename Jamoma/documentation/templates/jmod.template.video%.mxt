max v2;#N vpatcher 25 89 879 573;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P newex 176 237 47 196617 pcontrol;#P newex 176 215 78 196617 jcom.pass open;#P flonum 77 22 35 9 0 0 8224 3 181 181 181 221 221 221 255 255 255 0 0 0;#P objectname ParameterA;#P window linecount 3;#P comment 479 312 324 196617 If you need to return messages from your algorithm to the rest of the world. you can specify type \, range... etc as in jcom.parameter or jcom.message;#B color 12;#P window linecount 1;#P comment 457 292 300 196617 jcom.return:;#B color 12;#P window linecount 2;#P comment 474 257 324 196617 If you need to send messages to or within the patch \, but it's not required that they be stored or retrieveable \, use jcom.message.;#B color 12;#P window linecount 1;#P comment 455 242 300 196617 jcom.message:;#B color 12;#P window linecount 2;#P comment 474 188 317 196617 Use this for any parameters that you'd like to be able to store and retrieve.;#B color 12;#P window linecount 1;#P comment 455 173 235 196617 jcom.parameter:;#B color 12;#P comment 560 448 241 196617 for html autodoc of module;#B color 12;#P comment 560 403 256 196617 1 (default)/0 --- 1 means that repetitions are allowed;#B color 12;#P comment 560 388 241 196617 none/linear/linear.q (none);#B color 12;#P comment 560 433 241 196617 none \, low \, high \, both (default);#B color 12;#P window linecount 0;#P comment 560 418 241 196617;#B color 12;#P window linecount 1;#P comment 560 373 241 196617 generic (default) \, msg_int \, msg_float \, menu \, toggle;#B color 12;#P comment 477 448 79 196617 @description;#B color 12;#P comment 477 403 79 196617 @repetitions;#B color 12;#P comment 477 388 79 196617 @ramp;#B color 12;#P comment 477 433 79 196617 @clipmode;#B color 12;#P comment 477 418 79 196617 @range;#B color 12;#P comment 477 373 79 196617 @type;#B color 12;#P comment 458 358 235 196617 Attributes for jcom.parameter and jcom.message:;#B color 12;#P message 94 69 191 196617 /preset/store 1 default \, /preset/write;#B color 3;#P newex 39 397 167 196617 jcom.return return_c @range 0. 1.;#P newex 155 305 58 196617 jcom.out 1;#P newex 155 193 52 196617 jcom.in 1;#P comment 9 24 65 196617 Parameter;#B frgb 149 149 149;#P newex 477 51 88 196617 pvar ParameterA;#P window linecount 2;#P newex 477 71 338 196617 jcom.parameter hue_angle @repetitions 0 @type msg_float @range 0. 360. @clipmode none @description "Document what this parameter do...";#P objectname hue_angle;#P window linecount 1;#P message 106 87 125 196617 /documentation/generate;#B color 3;#P window linecount 2;#P newex 0 114 337 196617 jcom.hub jmod.video.template @size 1U-half @module_type video @algorithm_type jitter @description "This module doesn't do much yet.";#P objectname jmod.hub;#P window linecount 1;#P comment 170 338 75 196617 VIDEO OUTPUT;#P outlet 155 338 13 0;#P inlet 155 172 13 0;#P comment 170 172 65 196617 VIDEO INPUT;#P newex 39 278 126 196617 jalg.template.video%.mxt;#P message 236 87 31 196617 /init;#P comment 15 86 79 196617 command input;#P outlet 0 171 13 0;#P inlet 0 84 13 0;#P comment 167 280 174 196617 <- substitute for desired algorithm;#B color 12;#P bpatcher 0 0 256 60 0 0 jcom.gui.mxt 0;#P objectname jmod.gui.1Uh.v.mxb;#P fasten 19 0 11 0 99 109 5 109;#P fasten 5 0 11 0 241 109 5 109;#P fasten 12 0 11 0 111 109 5 109;#P connect 2 0 11 0;#P connect 11 0 3 0;#P fasten 41 0 6 0 181 263 44 263;#P fasten 40 1 6 0 249 263 44 263;#P connect 16 0 6 1;#P lcolor 7;#P connect 8 0 16 0;#P lcolor 7;#P connect 17 0 9 0;#P connect 16 1 40 0;#P connect 40 0 41 0;#P fasten 13 0 14 0 482 103 470 103 470 46 482 46;#P connect 14 0 13 0;#P pop;