max v2;
#N vpatcher 127 71 442 431;
#P window setfont "Sans Serif" 9.;
#P window linecount 4;
#P comment 115 262 146 9109513 a number (int/float) to the second inlet will set the start point of the ramp without actually sending a value out.;
#P window linecount 1;
#P message 88 266 23 9109513 900;
#P window linecount 5;
#P comment 121 182 146 9109513 when a list is received \, a ramp is generated from the current value to the new value (first number) over the specified number of milliseconds (second number).;
#P window linecount 1;
#P message 73 190 46 9109513 450 2500;
#P flonum 44 317 35 9 0 0 0 139 0 0 0 221 221 221 222 222 222 0 0 0;
#P flonum 44 138 35 9 0 0 0 139 0 0 0 221 221 221 222 222 222 0 0 0;
#P newex 44 293 45 9109513 jmod.line;
#P window setfont "Sans Serif" 18.;
#P comment 15 21 189 9109522 jmod.line;
#P window setfont "Sans Serif" 9.;
#P comment 16 47 221 9109513 generate ramping functions;
#P user panel 14 15 270 50;
#X brgb 177 199 196;
#X frgb 0 0 0;
#X border 0;
#X rounded 0;
#X shadow 0;
#X done;
#P window linecount 3;
#P comment 29 71 241 9109513 This abstraction is a wrapper around the standard line object . It is used throughout Jamoma for implementing ramp enabled parameters.;
#P comment 81 131 146 9109513 sending a number (int/float) to the left inlet sets the internal value and sends it out;
#P connect 8 0 5 0;
#P connect 6 0 5 0;
#P connect 5 0 7 0;
#P connect 10 0 5 1;
#P pop;
