max v2;#N vpatcher 353 49 997 641;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 434 133 50 196617 see also:;#P message 484 133 64 196617 jcom.crop%;#P hidden newex 484 155 64 196617 prepend help;#P objectname phelp;#P hidden newex 484 175 45 196617 pcontrol;#P user jit.fpsgui 292 120 60 196617 3;#P message 45 233 40 196617 /reset;#P bpatcher 27 160 255 60 0 0 jmod.brcosa%.mxt 0 /motion%;#P objectname /brcosa%;#P bpatcher 27 90 255 60 0 0 jmod.input%.mxt 0;#P objectname /input%;#P newex 27 255 83 196617 jcom.autocrop%;#P user jit.fpsgui 113 253 60 196617 3;#P window setfont "Sans Serif" 18.;#P comment 32 21 189 196626 jcom.autocrop%;#B frgb 255 255 255;#P window setfont "Sans Serif" 9.;#P comment 33 47 242 196617 automatically crop video;#B frgb 255 255 255;#P user panel 4 5 273 63;#X brgb 67 65 107;#X frgb 128 11 10;#X border 0;#X rounded 0;#X shadow 0;#X done;#P user jit.pwindow 26 305 111 173 0 1 0 0 1 0;#P window linecount 4;#P comment 286 165 118 196617 To make this work \, you probably need to ensure that the contrast in the image is good.;#P window linecount 2;#P comment 176 255 249 196617 Left output is the video stream \, and right output is a message which changes the size of the jit.window.;#P window linecount 4;#P comment 285 15 323 196617 This abstraction is useful if you have a video input where there is a clear separation between foreground and background \, and want to crop the video to match only the maximum size of the foreground's contraction (like a dancer in front of an even background).;#P fasten 10 1 8 0 277 228 32 228;#P fasten 11 0 8 0 50 251 32 251;#P fasten 8 0 3 0 32 288 32 288;#P fasten 8 1 3 0 105 278 32 278;#P hidden connect 8 0 7 0;#P connect 9 1 10 1;#P hidden connect 9 1 12 0;#P hidden connect 15 0 14 0;#P hidden connect 14 0 13 0;#P pop;