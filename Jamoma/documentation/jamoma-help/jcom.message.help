max v2;
#N vpatcher 346 82 1021 754;
#P window setfont "Sans Serif" 9.;
#P comment 332 323 303 196617 This helps keeping the patch tidy;
#P window linecount 2;
#P newex 330 493 224 196617 jcom.message my_menu @type msg_symbol @repetitions 0 @description "My menu";
#P objectname my_menu;
#P newex 330 457 227 196617 jcom.message my_toggle @repetitions 0 @type msg_toggle @description "My toggle";
#P objectname my_toggle;
#P newex 330 420 251 196617 jcom.message my_int @clipmode none @type msg_int @ramp linear.sched @repetitions 0 @description "My int";
#P objectname my_int;
#P newex 330 384 230 196617 jcom.message my_float @clipmode none @type msg_float @ramp linear.sched @description "My float";
#P objectname my_float;
#P newex 330 348 308 196617 jcom.message my_slider @type msg_int @range 0 127 @clipmode both @ramp linear.sched @repetitions 0 @description "My slider";
#P objectname my_slider;
#P comment 944 407 206 196617 If you want to use menu text item instead of index numbers \, this is how to do it.;
#P comment 332 294 303 196617 pvar is used for wireless communication between the GUI interface and jcom.parameter.;
#P number 111 229 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;
#P objectname MyMessage;
#P number 418 230 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;
#P window linecount 1;
#P message 418 250 83 196617 /mymessage \$1;
#P newex 238 566 45 196617 loadbang;
#P message 118 580 103 196617 jcom.parameter.gain;
#P window linecount 2;
#P message 238 615 65 196617 \; max refresh;
#P window linecount 1;
#P message 34 580 81 196617 jcom.parameter;
#P hidden newex 34 603 64 196617 prepend help;
#P hidden newex 34 623 45 196617 pcontrol;
#P newex 238 588 50 196617 deferlow;
#P newex 418 270 64 196617 s incomming;
#P hidden newex 196 406 65 196617 loadmess set;
#P newex 388 203 198 196617 jcom.message mymessage @type msg_int;
#P newex 388 175 85 196617 pvar MyMessage;
#P newex 132 336 64 196617 r incomming;
#P comment 125 451 175 196617 Dumpout;
#P message 49 506 182 196617 /my_toggle 1;
#P newex 49 481 61 196617 prepend set;
#P window linecount 0;
#P message 126 431 187 196617;
#P window linecount 1;
#P newex 126 406 61 196617 prepend set;
#P window setfont "Sans Serif" 14.;
#P comment 36 307 84 196622 jcom.hub;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P newex 36 357 258 196617 jcom.hub jcom.parameter_help @size 1U-half @module_type control;
#P objectname jcom.hub;
#P window linecount 1;
#P comment 48 338 79 196617 command input;
#P inlet 36 338 13 0;
#P outlet 36 421 13 0;
#P comment 41 229 65 196617 my_message;
#B frgb 255 255 255;
#P window setfont "Sans Serif" 14.;
#P comment 35 177 79 196622 jcom.gui;
#P window setfont "Sans Serif" 9.;
#P comment 49 527 161 196617 Reporting to the rest of the world;
#P user panel 17 285 300 263;
#X brgb 199 199 214;
#X frgb 0 0 0;
#X border 0;
#X rounded 0;
#X shadow 0;
#X done;
#P window linecount 3;
#P comment 16 117 380 196617 jcom.message behaves the same as jcom.parameter and takes the same attributes. The only differences is that it is not stored as part of the state in jcom.hub \, and it is not pattr-aware.;
#P window setfont "Sans Serif" 18.;
#P window linecount 1;
#P comment 19 20 189 196626 jcom.message;
#B frgb 255 255 255;
#P window setfont "Sans Serif" 9.;
#P comment 20 46 221 196617 Handling messages in the modules;
#B frgb 255 255 255;
#P user panel 13 14 389 51;
#X brgb 67 65 107;
#X frgb 0 0 0;
#X border 0;
#X rounded 0;
#X shadow 0;
#X done;
#P window linecount 2;
#P comment 16 87 380 196617 jcom.message can be used to handle all kinds of messages in the module that you do not want to store as part of the state of the module.;
#P window linecount 1;
#P comment 34 563 100 196617 See also;
#P bpatcher 35 204 256 60 0 0 jcom.gui.mxt 0 2610_;
#P objectname jcom.gui.1Uh.a.stereo.mxt;
#P user panel 16 159 300 119;
#X brgb 199 199 214;
#X frgb 0 0 0;
#X border 0;
#X rounded 0;
#X shadow 0;
#X done;
#P background;
#P hidden connect 32 0 29 0;
#P hidden connect 30 0 29 0;
#P hidden connect 29 0 28 0;
#P connect 13 0 15 0;
#P fasten 22 0 15 0 137 354 41 354;
#P connect 15 0 12 0;
#P fasten 15 0 19 0 41 406 54 406;
#P hidden connect 25 0 20 0;
#P connect 19 0 20 0;
#P fasten 15 1 17 0 289 402 131 402;
#P hidden fasten 25 0 18 0 201 427 131 427;
#P connect 17 0 18 0;
#P connect 33 0 27 0;
#P connect 27 0 31 0;
#P fasten 24 0 23 0 393 227 376 227 376 167 393 167;
#P connect 23 0 24 0;
#P connect 35 0 34 0;
#P connect 34 0 26 0;
#P pop;
