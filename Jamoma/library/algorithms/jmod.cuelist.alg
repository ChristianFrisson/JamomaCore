max v2;#N vpatcher 67 65 777 680;#P origin 0 -10;#P window setfont "Sans Serif" 9.;#N vpatcher 33 59 633 459;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 322 309 234 196617 This is done by stopping the delay in the [WAIT_or_pass_on] subpatch.;#P comment 322 280 234 196617 If a new cue is triggered \, we have to make sure that any current cue on WAIT is cancelled.;#P window linecount 1;#P comment 322 32 135 196617 WAIT (pause/resume);#P comment 322 125 213 196617 WAIT will cause uzi to pause and resume;#P newex 50 60 240 196617 t s b;#P newex 80 258 64 196617 prepend line;#P newex 80 229 81 196617 expr $i1+$i2-1;#P newex 50 196 40 196617 uzi;#P newex 50 121 81 196617 unpack 0 0;#P newex 50 166 81 196617 expr $i2-$i1+1;#P window setfont "Sans Serif" 18.;#N coll $0_cues 1;#P newobj 50 86 140 196626 coll $0_cues 1;#P inlet 50 30 15 0;#P inlet 303 30 15 0;#P outlet 80 280 15 0;#P outlet 280 278 15 0;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 322 81 181 196617 Use Uzi to dump the lines of the script that belong to the desired cue.;#P window linecount 0;#P comment 68 32 135 196617 Cue that we want to trigger;#P comment 79 303 118 196617 poll lines from [text];#P connect 6 0 13 0;#P connect 13 0 7 0;#P connect 7 0 9 0;#P connect 9 0 8 0;#P fasten 5 0 10 0 308 189 55 189;#P connect 8 0 10 0;#P connect 10 2 11 0;#P connect 11 0 12 0;#P connect 12 0 4 0;#P connect 9 1 8 1;#P fasten 9 0 11 1 55 152 156 152;#P connect 13 1 3 0;#P pop;#P newobj 331 192 100 196617 p trigger_cue;#P window linecount 2;#P newex 306 548 188 196617 jmod.return $1 /cues @description "Returns a list of all cues in the script.";#P window linecount 1;#N vpatcher 60 72 913 742;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 546 214 29 196617 <-;#P comment 244 470 29 196617 ->;#P comment 134 307 29 196617 ->;#P window linecount 0;#P newex 265 211 51 196617 zl slice 1;#P window linecount 6;#P comment 173 468 72 196617 internally store cue names and what line they start and end at;#P window linecount 3;#P comment 30 354 114 196617 the list has to be reversed to start with the first cue;#P window linecount 2;#P comment 649 606 84 196617 return list of cues;#P comment 649 110 108 196617 bang when new text file has been read;#P window linecount 1;#P comment 413 522 117 196617 connect to text inlet;#P comment 139 49 413 196617 - the names of all cues.;#P comment 139 62 412 196617 - what line they start and end at.;#P outlet 649 584 15 0;#P comment 413 509 100 196617 grab from text;#P comment 444 118 100 196617 text outlet 3;#P comment 365 118 100 196617 text outlet 2;#P newex 158 352 37 196617 zl rev;#P newex 158 305 67 196617 zl group 256;#P inlet 649 145 15 0;#P window linecount 0;#P newex 311 269 20 196617 t b;#P newex 311 314 27 196617 i;#P newex 476 261 27 196617 t i i;#P newex 305 389 27 196617 - 1;#P newex 277 367 66 196617 unpack s 0 0;#P newex 476 211 57 196617 expr $i2-$i1+1;#P newex 446 170 105 196617 t i i i;#N coll $0_cues 1;#P newobj 265 466 77 196617 coll $0_cues 1;#P newex 265 425 72 196617 prepend store;#P window linecount 1;#P newex 265 167 51 196617 route set;#P newex 265 342 56 196617 pack s 0 0;#P newex 265 189 54 196617 route CUE;#P newex 476 423 64 196617 prepend line;#P newex 446 191 40 196617 uzi;#P newex 391 426 69 196617 t query clear;#P inlet 446 145 15 0;#P inlet 367 145 15 0;#P inlet 265 145 15 0;#P outlet 391 511 15 0;#P comment 263 118 100 196617 text outlet 1;#P comment 139 36 414 196617 When the cue script is loaded \, it is scanned by this subpatch in order to get:;#P window linecount 0;#P comment 271 99 238 196617 -------- connect to text outlets --------;#P comment 568 206 83 196617 the text file is scanned from end to beginning;#P comment 30 297 114 196617 all cue names are stored here \, and dumped at the end.;#P comment 144 214 119 196617 discard comments -->;#P comment 134 354 29 196617 ->;#P connect 40 0 27 0;#P connect 12 1 27 0;#P connect 27 0 28 0;#P connect 8 0 16 0;#P connect 16 0 14 0;#P connect 14 0 40 0;#P connect 40 0 15 0;#P connect 15 0 17 0;#P connect 17 0 18 0;#P fasten 11 1 18 0 455 454 270 454;#P connect 15 0 21 0;#P fasten 23 1 15 1 498 294 293 294;#P connect 21 1 22 0;#P connect 40 0 25 0;#P connect 25 0 24 0;#P connect 24 0 15 2;#P fasten 22 0 24 1 310 411 354 411 354 309 333 309;#P fasten 19 2 24 1 545 307 333 307;#P fasten 26 0 11 0 654 392 396 392;#P connect 11 0 7 0;#P fasten 13 0 7 0 481 486 396 486;#P connect 10 0 19 0;#P connect 19 0 12 0;#P connect 12 2 20 0;#P connect 20 0 23 0;#P connect 23 0 13 0;#P connect 19 1 20 1;#P fasten 28 0 32 0 163 565 654 565;#P pop;#P newobj 255 338 61 196617 p find_cues;#P newex 255 298 63 196617 grab 3;#N vpatcher 33 59 688 441;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 22 117 200 196617 Get rid of empty lines (bang) and comments (starting with "#");#P window linecount 1;#P newex 226 65 50 196617 route set;#P newex 226 121 91 196617 route bang # CUE;#P inlet 226 33 15 0;#P outlet 307 199 15 0;#P window linecount 0;#P comment 246 33 100 196617 from text;#P comment 22 61 186 196617 All lines from text starts of with "set" \, so we have to get rid of that;#P connect 3 0 5 0;#P connect 5 0 4 0;#P connect 4 3 2 0;#P pop;#P newobj 331 341 58 196617 p cue_gate;#N vpatcher 33 59 756 447;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 97 300 74 196617 cue events passed through;#P window linecount 0;#P newex 397 129 36 196617 t stop;#P window linecount 2;#P newex 210 237 42 196617 t resume;#P window linecount 1;#P newex 210 214 30 196617 defer;#P newex 210 192 33 196617 del 0;#P newex 210 160 56 196617 t b i pause;#P newex 210 118 98 196617 route WAIT;#P inlet 210 65 15 0;#P inlet 397 84 15 0;#P outlet 78 300 15 0;#P outlet 210 300 15 0;#P window linecount 0;#P comment 207 34 265 196617 If a WAIT message is received \, uzi is paused for a while. Other messages are passed through to the right outlet.;#P comment 227 300 35 196617 to uzi;#P comment 421 83 232 196617 If a new cue is triggered \, we have to make sure that the previous one is cancelled.;#P fasten 7 1 4 0 303 147 83 147;#P connect 6 0 7 0;#P connect 7 0 8 0;#P connect 8 0 9 0;#P fasten 12 0 9 0 402 187 215 187;#P connect 9 0 10 0;#P connect 10 0 11 0;#P connect 11 0 3 0;#P fasten 8 2 3 0 261 282 215 282;#P connect 8 1 9 1;#P connect 5 0 12 0;#P pop;#P newobj 331 373 100 196617 p WAIT_or_pass_on;#P newex 479 180 123 196617 jmod.filesaver.mxt TEXT;#P window linecount 2;#P newex 11 548 261 196617 jmod.return $1 /remote @description "Reports all changes of values in all modules";#P window linecount 1;#P newex 11 47 108 196617 jmod.oscroute /listen;#P newex 11 524 29 196617 gate;#P newex 30 500 131 196617 r jmod.remote.fromModule;#P newex 257 106 37 196617 t open;#P newex 405 105 118 196617 s jmod.remote.toModule;#N vpatcher 72 104 672 504;#P window setfont "Sans Serif" 9.;#P window linecount 0;#P newex 115 121 118 196617 s jmod.remote.state.get;#P newex 60 58 121 196617 t b b clear;#P inlet 60 28 14 0;#P window linecount 1;#P newex 60 121 49 196617 deferlow;#P newex 60 143 35 196617 t open;#P newex 115 187 40 196617 text;#P newex 115 141 133 196617 r jmod.remote.state.return;#P connect 4 0 5 0;#P connect 5 0 3 0;#P connect 3 0 2 0;#P connect 5 1 6 0;#P connect 2 0 1 0;#P fasten 5 2 1 0 175 84 280 84 280 175 120 175;#P connect 0 0 1 0;#P pop;#P newobj 183 106 61 196617 p get_state;#P newex 331 431 118 196617 s jmod.remote.toModule;#P window setfont "Sans Serif" 18.;#P newex 331 296 47 196626 text;#P window setfont "Sans Serif" 9.;#P newex 109 140 108 196617 jmod.filewatcher.mxt;#P newex 109 71 458 196617 jmod.oscroute /load_script /get_state /view /cue /remote /save_script;#P inlet 11 26 15 0;#P comment 453 434 244 196617 <- events are sent remotely to other modules.;#P connect 1 0 11 0;#P connect 11 0 10 0;#P connect 10 0 12 0;#P connect 9 0 10 1;#P connect 11 1 2 0;#P connect 2 0 3 0;#P connect 2 1 6 0;#P fasten 17 0 16 0 260 361 233 361 233 294 260 294;#P connect 16 0 17 0;#P connect 2 2 8 0;#P connect 16 1 17 1;#P connect 16 2 17 2;#P fasten 4 1 17 3 354 330 311 330;#P connect 17 1 18 0;#P connect 2 3 19 0;#P fasten 3 0 4 0 114 236 336 236;#P fasten 8 0 4 0 262 233 336 233;#P fasten 13 0 4 0 484 246 336 246;#P fasten 16 3 4 0 311 318 328 318 328 294 336 294;#P connect 19 0 4 0;#P connect 4 0 15 0;#P connect 15 0 14 0;#P connect 14 0 5 0;#P connect 2 4 7 0;#P fasten 14 1 19 1 426 398 442 398 442 182 426 182;#P lcolor 7;#P connect 19 1 14 1;#P connect 2 5 13 0;#P fasten 3 0 13 1 114 168 597 168;#P lcolor 12;#P pop;