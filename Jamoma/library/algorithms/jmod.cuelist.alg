max v2;#N vpatcher 224 86 1053 754;#P origin 0 -10;#P window setfont "Sans Serif" 9.;#P window linecount 1;#N vpatcher 33 59 688 441;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 22 117 200 196617 Get rid of empty lines (bang) and comments (starting with "#");#P window linecount 1;#P comment 441 33 174 196617 name of CUE that we want to trigger;#P newex 280 309 80 196617 gate 1 0;#P newex 226 65 50 196617 route set;#P newex 226 121 91 196617 route bang # CUE;#P inlet 421 33 15 0;#P inlet 226 33 15 0;#P outlet 280 331 15 0;#P newex 280 258 63 196617 jmod.equals;#P newex 280 207 50 196617 zl slice 1;#P window linecount 0;#P comment 246 33 100 196617 from text;#P comment 22 61 186 196617 All lines from text starts of with "set" \, so we have to get rid of that;#P comment 22 149 224 196617 Also filter CUE \, and use that to control the gate;#P comment 22 201 230 196617 Get rid of CUE \, so that we are left with the name of the CUE only.;#P comment 22 257 229 196617 The gate is only open if this is the CUE that we are looking for.;#P connect 8 0 11 0;#P connect 11 0 10 0;#P connect 10 2 5 0;#P connect 5 0 6 0;#P connect 6 0 12 0;#P connect 12 0 7 0;#P connect 9 0 6 1;#P fasten 10 3 12 1 312 165 355 165;#P pop;#P newobj 331 341 198 196617 p cue_gate;#N vpatcher 33 59 633 459;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 184 293 128 196617 cue events passed through;#P window linecount 0;#P newex 264 122 36 196617 t stop;#P window linecount 2;#P newex 77 230 42 196617 t resume;#P window linecount 1;#P newex 77 207 30 196617 defer;#P newex 77 185 33 196617 del 0;#P newex 77 153 56 196617 t b i pause;#P newex 77 111 98 196617 route WAIT;#P inlet 77 77 15 0;#P inlet 264 77 15 0;#P outlet 165 291 15 0;#P outlet 77 291 15 0;#P window linecount 0;#P comment 74 27 265 196617 If a WAIT message is received \, uzi is paused for a while. Other messages are passed through to the right outlet.;#P comment 94 293 35 196617 to uzi;#P comment 288 76 232 196617 If a new cue is triggered \, we have to make sure that the previous one is cancelled.;#P connect 6 0 7 0;#P connect 7 0 8 0;#P connect 8 0 9 0;#P fasten 12 0 9 0 269 180 82 180;#P connect 9 0 10 0;#P connect 10 0 11 0;#P connect 11 0 3 0;#P fasten 8 2 3 0 128 275 82 275;#P connect 8 1 9 1;#P connect 7 1 4 0;#P connect 5 0 12 0;#P pop;#P newobj 331 373 292 196617 p WAIT_or_pass_on;#P newex 479 106 123 196617 jmod.filesaver.mxt TEXT;#P window linecount 2;#P newex 11 593 261 196617 jmod.return $1 /remote @description "Reports all changes of values in all modules";#P window linecount 1;#P newex 11 47 108 196617 jmod.oscroute /listen;#P newex 11 569 29 196617 gate;#P newex 30 545 131 196617 r jmod.remote.fromModule;#P newex 331 190 27 196617 i;#P newex 331 216 40 196617 uzi;#P newex 331 240 67 196617 prepend line;#P newex 257 106 37 196617 t open;#P newex 405 131 118 196617 s jmod.remote.toModule;#N vpatcher 72 104 672 504;#P window setfont "Sans Serif" 9.;#P window linecount 0;#P newex 115 121 118 196617 s jmod.remote.state.get;#P newex 60 58 121 196617 t b b clear;#P inlet 60 28 14 0;#P window linecount 1;#P newex 60 121 49 196617 deferlow;#P newex 60 143 35 196617 t open;#P newex 115 187 40 196617 text;#P newex 115 141 133 196617 r jmod.remote.state.return;#P connect 4 0 5 0;#P connect 5 0 3 0;#P connect 3 0 2 0;#P connect 5 1 6 0;#P connect 2 0 1 0;#P fasten 5 2 1 0 175 84 280 84 280 175 120 175;#P connect 0 0 1 0;#P pop;#P newobj 183 106 61 196617 p get_state;#P newex 613 398 118 196617 s jmod.remote.toModule;#P newex 331 153 293 196617 t b query s b;#P window setfont "Sans Serif" 18.;#P newex 331 296 47 196626 text;#P window setfont "Sans Serif" 9.;#P newex 109 140 108 196617 jmod.filewatcher.mxt;#P newex 109 71 458 196617 jmod.oscroute /load_script /get_state /view /cue /remote /save_script;#P inlet 11 26 15 0;#P window linecount 2;#P comment 627 125 182 196617 cue_events are done by reading through the script one line at a time.;#P comment 627 166 182 196617 Only lines belonging to the current cue_event are passed through;#P connect 2 0 16 0;#P connect 16 0 15 0;#P connect 15 0 17 0;#P connect 14 0 15 1;#P connect 16 1 3 0;#P connect 3 0 4 0;#P connect 3 1 8 0;#P connect 3 2 10 0;#P connect 3 3 6 0;#P connect 6 0 13 0;#P connect 13 0 12 0;#P fasten 19 0 12 0 336 399 232 399 232 212 336 212;#P fasten 12 2 11 0 366 236 336 236;#P fasten 4 0 5 0 114 286 336 286;#P fasten 10 0 5 0 262 278 336 278;#P connect 11 0 5 0;#P fasten 18 0 5 0 484 292 336 292;#P fasten 6 1 5 0 430 290 336 290;#P connect 5 0 20 0;#P connect 20 0 19 0;#P fasten 5 2 13 1 372 331 440 331 440 182 353 182;#P lcolor 1;#P connect 3 4 9 0;#P connect 3 5 18 0;#P connect 6 2 20 1;#P connect 4 0 18 1;#P lcolor 12;#P connect 6 3 19 1;#P connect 19 1 7 0;#P pop;