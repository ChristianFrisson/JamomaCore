max v2;
#N vpatcher 337 124 1047 739;
#P origin 0 -10;
#P window setfont "Sans Serif" 9.;
#N vpatcher 33 59 633 459;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P comment 322 309 234 9109513 This is done by stopping the delay in the [WAIT_or_pass_on] subpatch.;
#P comment 322 280 234 9109513 If a new cue is triggered \, we have to make sure that any current cue on WAIT is cancelled.;
#P window linecount 1;
#P comment 322 32 135 9109513 WAIT (pause/resume);
#P comment 322 125 213 9109513 WAIT will cause uzi to pause and resume;
#P newex 50 60 240 9109513 t s b;
#P newex 80 258 64 9109513 prepend line;
#P newex 80 229 81 9109513 expr $i1+$i2-1;
#P newex 50 196 40 9109513 uzi;
#P newex 50 121 81 9109513 unpack 0 0;
#P newex 50 166 81 9109513 expr $i2-$i1+1;
#P window setfont "Sans Serif" 18.;
#N coll $0_cues 1;
#P newobj 50 86 140 9109522 coll $0_cues 1;
#P inlet 50 30 15 0;
#P inlet 303 30 15 0;
#P outlet 80 280 15 0;
#P outlet 280 278 15 0;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P comment 322 81 181 9109513 Use Uzi to dump the lines of the script that belong to the desired cue.;
#P window linecount 0;
#P comment 68 32 135 9109513 Cue that we want to trigger;
#P comment 79 303 118 9109513 poll lines from [text];
#P connect 6 0 13 0;
#P connect 13 0 7 0;
#P connect 7 0 9 0;
#P connect 9 0 8 0;
#P connect 8 0 10 0;
#P fasten 5 0 10 0 308 189 55 189;
#P connect 10 2 11 0;
#P connect 11 0 12 0;
#P connect 12 0 4 0;
#P connect 9 1 8 1;
#P fasten 9 0 11 1 55 152 156 152;
#P connect 13 1 3 0;
#P pop;
#P newobj 331 192 100 9109513 p trigger_cue;
#P window linecount 2;
#P newex 306 548 188 9109513 jmod.return $1 /cues @description "Returns a list of all cues in the script.";
#P window linecount 1;
#N vpatcher 60 72 913 742;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P comment 546 214 29 9109513 <-;
#P comment 244 470 29 9109513 ->;
#P comment 134 307 29 9109513 ->;
#P window linecount 0;
#P newex 265 211 51 9109513 zl slice 1;
#P window linecount 6;
#P comment 173 468 72 9109513 internally store cue names and what line they start and end at;
#P window linecount 3;
#P comment 30 354 114 9109513 the list has to be reversed to start with the first cue;
#P window linecount 2;
#P comment 649 606 84 9109513 return list of cues;
#P comment 649 110 108 9109513 bang when new text file has been read;
#P window linecount 1;
#P comment 413 522 117 9109513 connect to text inlet;
#P comment 139 49 413 9109513 - the names of all cues.;
#P comment 139 62 412 9109513 - what line they start and end at.;
#P outlet 649 584 15 0;
#P comment 413 509 100 9109513 grab from text;
#P comment 444 118 100 9109513 text outlet 3;
#P comment 365 118 100 9109513 text outlet 2;
#P newex 158 352 37 9109513 zl rev;
#P newex 158 305 67 9109513 zl group 256;
#P inlet 649 145 15 0;
#P window linecount 0;
#P newex 311 269 20 9109513 t b;
#P newex 311 314 27 9109513 i;
#P newex 476 261 27 9109513 t i i;
#P newex 305 389 27 9109513 - 1;
#P newex 277 367 66 9109513 unpack s 0 0;
#P newex 476 211 57 9109513 expr $i2-$i1+1;
#P newex 446 170 105 9109513 t i i i;
#N coll $0_cues 1;
#P newobj 265 466 77 9109513 coll $0_cues 1;
#P newex 265 425 72 9109513 prepend store;
#P window linecount 1;
#P newex 265 167 51 9109513 route set;
#P newex 265 342 56 9109513 pack s 0 0;
#P newex 265 189 54 9109513 route CUE;
#P newex 476 423 64 9109513 prepend line;
#P newex 446 191 40 9109513 uzi;
#P newex 391 426 69 9109513 t query clear;
#P inlet 446 145 15 0;
#P inlet 367 145 15 0;
#P inlet 265 145 15 0;
#P outlet 391 511 15 0;
#P comment 263 118 100 9109513 text outlet 1;
#P comment 139 36 414 9109513 When the cue script is loaded \, it is scanned by this subpatch in order to get:;
#P window linecount 0;
#P comment 271 99 238 9109513 -------- connect to text outlets --------;
#P comment 568 206 83 9109513 the text file is scanned from end to beginning;
#P comment 30 297 114 9109513 all cue names are stored here \, and dumped at the end.;
#P comment 144 214 119 9109513 discard comments -->;
#P comment 134 354 29 9109513 ->;
#P connect 40 0 27 0;
#P connect 12 1 27 0;
#P connect 27 0 28 0;
#P connect 8 0 16 0;
#P connect 16 0 14 0;
#P connect 14 0 40 0;
#P connect 40 0 15 0;
#P connect 15 0 17 0;
#P fasten 11 1 18 0 455 454 270 454;
#P connect 17 0 18 0;
#P connect 15 0 21 0;
#P fasten 23 1 15 1 498 294 293 294;
#P connect 21 1 22 0;
#P connect 40 0 25 0;
#P connect 25 0 24 0;
#P connect 24 0 15 2;
#P fasten 19 2 24 1 545 307 333 307;
#P fasten 22 0 24 1 310 411 354 411 354 309 333 309;
#P fasten 26 0 11 0 654 392 396 392;
#P fasten 13 0 7 0 481 486 396 486;
#P connect 11 0 7 0;
#P connect 10 0 19 0;
#P connect 19 0 12 0;
#P connect 12 2 20 0;
#P connect 20 0 23 0;
#P connect 23 0 13 0;
#P connect 19 1 20 1;
#P fasten 28 0 32 0 163 565 654 565;
#P pop;
#P newobj 255 338 61 9109513 p find_cues;
#P newex 255 298 63 9109513 grab 3;
#N vpatcher 33 59 598 316;
#P window setfont "Sans Serif" 9.;
#P window linecount 1;
#P newex 240 116 59 9109513 fromsymbol;
#P window linecount 2;
#P comment 294 93 200 9109513 filter out comments (text starting with a #);
#P window linecount 1;
#P newex 226 90 66 9109513 regexp (.*)#.*;
#P comment 136 166 129 9109513 Get rid of empty lines (bang);
#P newex 226 65 50 9109513 route set;
#P newex 268 164 75 9109513 route bang CUE;
#P inlet 226 33 15 0;
#P outlet 332 197 15 0;
#P window linecount 0;
#P comment 246 33 100 9109513 from text;
#P comment 32 60 186 9109513 All lines from text starts of with "set" \, so we have to get rid of that;
#P connect 3 0 5 0;
#P connect 5 0 7 0;
#P connect 7 1 9 0;
#P connect 9 0 4 0;
#P connect 7 3 4 0;
#P connect 4 2 2 0;
#P pop;
#P newobj 331 341 58 9109513 p cue_gate;
#N vpatcher 33 59 756 447;
#P window setfont "Sans Serif" 9.;
#P window linecount 2;
#P comment 97 300 74 9109513 cue events passed through;
#P window linecount 0;
#P newex 397 129 36 9109513 t stop;
#P window linecount 2;
#P newex 210 237 42 9109513 t resume;
#P window linecount 1;
#P newex 210 214 30 9109513 defer;
#P newex 210 192 33 9109513 del 0;
#P newex 210 160 56 9109513 t b i pause;
#P newex 210 118 98 9109513 route WAIT;
#P inlet 210 65 15 0;
#P inlet 397 84 15 0;
#P outlet 78 300 15 0;
#P outlet 210 300 15 0;
#P window linecount 0;
#P comment 207 34 265 9109513 If a WAIT message is received \, uzi is paused for a while. Other messages are passed through to the right outlet.;
#P comment 227 300 35 9109513 to uzi;
#P comment 421 83 232 9109513 If a new cue is triggered \, we have to make sure that the previous one is cancelled.;
#P fasten 7 1 4 0 303 147 83 147;
#P connect 6 0 7 0;
#P connect 7 0 8 0;
#P fasten 12 0 9 0 402 187 215 187;
#P connect 8 0 9 0;
#P connect 9 0 10 0;
#P connect 10 0 11 0;
#P fasten 8 2 3 0 261 282 215 282;
#P connect 11 0 3 0;
#P connect 8 1 9 1;
#P connect 5 0 12 0;
#P pop;
#P newobj 331 373 100 9109513 p WAIT_or_pass_on;
#P newex 479 180 123 9109513 jmod.filesaver.mxt TEXT;
#P window linecount 2;
#P newex 11 548 261 9109513 jmod.return $1 /remote @description "Reports all changes of values in all modules";
#P window linecount 1;
#P newex 11 47 108 9109513 jmod.oscroute /listen;
#P newex 11 524 29 9109513 gate;
#P newex 30 500 131 9109513 r jmod.remote.fromModule;
#P newex 257 106 37 9109513 t open;
#P newex 405 105 118 9109513 s jmod.remote.toModule;
#N vpatcher 72 104 672 504;
#P window setfont "Sans Serif" 9.;
#P window linecount 0;
#P newex 115 121 118 9109513 s jmod.remote.state.get;
#P newex 60 58 121 9109513 t b b clear;
#P inlet 60 28 14 0;
#P window linecount 1;
#P newex 60 121 49 9109513 deferlow;
#P newex 60 143 35 9109513 t open;
#P newex 115 187 40 9109513 text;
#P newex 115 141 133 9109513 r jmod.remote.state.return;
#P connect 4 0 5 0;
#P connect 5 0 3 0;
#P connect 3 0 2 0;
#P connect 5 1 6 0;
#P connect 0 0 1 0;
#P fasten 5 2 1 0 175 84 280 84 280 175 120 175;
#P connect 2 0 1 0;
#P pop;
#P newobj 183 106 61 9109513 p get_state;
#P newex 331 431 118 9109513 s jmod.remote.toModule;
#P window setfont "Sans Serif" 18.;
#P newex 331 296 47 9109522 text;
#P window setfont "Sans Serif" 9.;
#P newex 109 140 108 9109513 jmod.filewatcher.mxt;
#P newex 109 71 458 9109513 jmod.oscroute /load_script /get_state /view /cue /remote /save_script;
#P inlet 11 26 15 0;
#P comment 453 434 244 9109513 <- events are sent remotely to other modules.;
#P connect 1 0 11 0;
#P connect 11 0 10 0;
#P connect 10 0 12 0;
#P connect 9 0 10 1;
#P connect 11 1 2 0;
#P connect 2 0 3 0;
#P connect 2 1 6 0;
#P fasten 17 0 16 0 260 361 233 361 233 294 260 294;
#P connect 16 0 17 0;
#P connect 2 2 8 0;
#P connect 16 1 17 1;
#P connect 16 2 17 2;
#P fasten 4 1 17 3 354 330 311 330;
#P connect 17 1 18 0;
#P connect 2 3 19 0;
#P fasten 3 0 4 0 114 236 336 236;
#P connect 19 0 4 0;
#P fasten 16 3 4 0 311 318 328 318 328 294 336 294;
#P fasten 13 0 4 0 484 246 336 246;
#P fasten 8 0 4 0 262 233 336 233;
#P connect 4 0 15 0;
#P connect 15 0 14 0;
#P connect 14 0 5 0;
#P connect 2 4 7 0;
#P fasten 14 1 19 1 426 398 442 398 442 182 426 182;
#P lcolor 7;
#P connect 19 1 14 1;
#P connect 2 5 13 0;
#P fasten 3 0 13 1 114 168 597 168;
#P lcolor 12;
#P pop;
